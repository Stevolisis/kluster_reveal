<!doctype html>
<html lang="en-US" prefix="og: https://ogp.me/ns#" class="respect-color-scheme-preference">
<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	
<!-- Search Engine Optimization by Rank Math PRO - https://s.rankmath.com/home -->
<title>REST API Authentication Example in PHP - JWT Tutorial</title>
<meta name="description" content="Learn how to authenticate your application with our REST API authentication example."/>
<meta name="robots" content="follow, index, max-snippet:-1, max-video-preview:-1, max-image-preview:large"/>
<link rel="canonical" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="REST API Authentication Example in PHP - JWT Tutorial" />
<meta property="og:description" content="Learn how to authenticate your application with our REST API authentication example." />
<meta property="og:url" content="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/" />
<meta property="og:site_name" content="CodeOfaNinja" />
<meta property="article:publisher" content="https://www.facebook.com/CodeOfANinja" />
<meta property="article:author" content="https://www.facebook.com/ninjazhai" />
<meta property="article:section" content="tut - rest api auth" />
<meta property="og:updated_time" content="2021-07-11T13:54:25+08:00" />
<meta property="og:image" content="https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2.jpg" />
<meta property="og:image:secure_url" content="https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2.jpg" />
<meta property="og:image:width" content="800" />
<meta property="og:image:height" content="420" />
<meta property="og:image:alt" content="rest api authentication example" />
<meta property="og:image:type" content="image/jpeg" />
<meta property="article:published_time" content="2018-09-19T13:23:20+08:00" />
<meta property="article:modified_time" content="2021-07-11T13:54:25+08:00" />
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content="REST API Authentication Example in PHP - JWT Tutorial" />
<meta name="twitter:description" content="Learn how to authenticate your application with our REST API authentication example." />
<meta name="twitter:site" content="@ninjazhai" />
<meta name="twitter:creator" content="@ninjazhai" />
<meta name="twitter:image" content="https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2.jpg" />
<meta name="twitter:label1" content="Written by" />
<meta name="twitter:data1" content="Mike Dalisay" />
<meta name="twitter:label2" content="Time to read" />
<meta name="twitter:data2" content="43 minutes" />
<script type="application/ld+json" class="rank-math-schema-pro">{"@context":"https://schema.org","@graph":[{"@type":["Person","Organization"],"@id":"https://www.codeofaninja.com/#person","name":"Mike Dalisay","logo":{"@type":"ImageObject","@id":"https://www.codeofaninja.com/#logo","url":"https://codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3.png","contentUrl":"https://codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3.png","caption":"Mike Dalisay","inLanguage":"en-US","width":"5764","height":"1152"},"image":{"@type":"ImageObject","@id":"https://www.codeofaninja.com/#logo","url":"https://codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3.png","contentUrl":"https://codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3.png","caption":"Mike Dalisay","inLanguage":"en-US","width":"5764","height":"1152"}},{"@type":"WebSite","@id":"https://www.codeofaninja.com/#website","url":"https://www.codeofaninja.com","name":"Mike Dalisay","publisher":{"@id":"https://www.codeofaninja.com/#person"},"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2.jpg","url":"https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2.jpg","width":"800","height":"420","inLanguage":"en-US"},{"@type":"WebPage","@id":"https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#webpage","url":"https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/","name":"REST API Authentication Example in PHP - JWT Tutorial","datePublished":"2018-09-19T13:23:20+08:00","dateModified":"2021-07-11T13:54:25+08:00","isPartOf":{"@id":"https://www.codeofaninja.com/#website"},"primaryImageOfPage":{"@id":"https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2.jpg"},"inLanguage":"en-US"},{"@type":"Person","@id":"https://www.codeofaninja.com/author/mike/","name":"Mike Dalisay","description":"I&#039;m Mike Dalisay, a pro web developer since 2010. I love developing simple software solutions. I can teach you how to do it and offer more value.","url":"https://www.codeofaninja.com/author/mike/","image":{"@type":"ImageObject","@id":"https://secure.gravatar.com/avatar/988badce0016da7e152cb3b4b747da2f?s=96&amp;d=mm&amp;r=g","url":"https://secure.gravatar.com/avatar/988badce0016da7e152cb3b4b747da2f?s=96&amp;d=mm&amp;r=g","caption":"Mike Dalisay","inLanguage":"en-US"},"sameAs":["https://www.codeofaninja.com/","https://www.facebook.com/ninjazhai","https://twitter.com/ninjazhai"]},{"@type":"BlogPosting","headline":"REST API Authentication Example in PHP - JWT Tutorial","keywords":"rest api authentication example","datePublished":"2018-09-19T13:23:20+08:00","dateModified":"2021-07-11T13:54:25+08:00","author":{"@id":"https://www.codeofaninja.com/author/mike/"},"publisher":{"@id":"https://www.codeofaninja.com/#person"},"description":"Learn how to authenticate your application with our REST API authentication example.","name":"REST API Authentication Example in PHP - JWT Tutorial","@id":"https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#richSnippet","isPartOf":{"@id":"https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#webpage"},"image":{"@id":"https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2.jpg"},"inLanguage":"en-US","mainEntityOfPage":{"@id":"https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#webpage"}}]}</script>
<!-- /Rank Math WordPress SEO plugin -->

<link rel='dns-prefetch' href='//www.googletagmanager.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="CodeOfaNinja &raquo; Feed" href="https://www.codeofaninja.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="CodeOfaNinja &raquo; Comments Feed" href="https://www.codeofaninja.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="CodeOfaNinja &raquo; REST API Authentication Example in PHP &#8211; JWT Tutorial Comments Feed" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/feed/" />
<script>
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/14.0.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/14.0.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.codeofaninja.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.0.2"}};
/*! This file is auto-generated */
!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode,e=(p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0),i.toDataURL());return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([129777,127995,8205,129778,127999],[129777,127995,8203,129778,127999])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(e=t.source||{}).concatemoji?c(e.concatemoji):e.wpemoji&&e.twemoji&&(c(e.twemoji),c(e.wpemoji)))}(window,document,window._wpemojiSettings);
</script>
<style>
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 0.07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='pt-cv-public-style-css'  href='https://www.codeofaninja.com/wp-content/plugins/content-views-query-and-display-post-page/public/assets/css/cv.css?ver=2.4.0.7' media='all' />
<link rel='stylesheet' id='wp-block-library-css'  href='https://www.codeofaninja.com/wp-includes/css/dist/block-library/style.min.css?ver=6.0.2' media='all' />
<style id='wp-block-library-inline-css'>
.has-text-align-justify{text-align:justify;}
</style>
<style id='wp-block-library-theme-inline-css'>
.wp-block-audio figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-audio figcaption{color:hsla(0,0%,100%,.65)}.wp-block-code{border:1px solid #ccc;border-radius:4px;font-family:Menlo,Consolas,monaco,monospace;padding:.8em 1em}.wp-block-embed figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-embed figcaption{color:hsla(0,0%,100%,.65)}.blocks-gallery-caption{color:#555;font-size:13px;text-align:center}.is-dark-theme .blocks-gallery-caption{color:hsla(0,0%,100%,.65)}.wp-block-image figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-image figcaption{color:hsla(0,0%,100%,.65)}.wp-block-pullquote{border-top:4px solid;border-bottom:4px solid;margin-bottom:1.75em;color:currentColor}.wp-block-pullquote__citation,.wp-block-pullquote cite,.wp-block-pullquote footer{color:currentColor;text-transform:uppercase;font-size:.8125em;font-style:normal}.wp-block-quote{border-left:.25em solid;margin:0 0 1.75em;padding-left:1em}.wp-block-quote cite,.wp-block-quote footer{color:currentColor;font-size:.8125em;position:relative;font-style:normal}.wp-block-quote.has-text-align-right{border-left:none;border-right:.25em solid;padding-left:0;padding-right:1em}.wp-block-quote.has-text-align-center{border:none;padding-left:0}.wp-block-quote.is-large,.wp-block-quote.is-style-large,.wp-block-quote.is-style-plain{border:none}.wp-block-search .wp-block-search__label{font-weight:700}:where(.wp-block-group.has-background){padding:1.25em 2.375em}.wp-block-separator.has-css-opacity{opacity:.4}.wp-block-separator{border:none;border-bottom:2px solid;margin-left:auto;margin-right:auto}.wp-block-separator.has-alpha-channel-opacity{opacity:1}.wp-block-separator:not(.is-style-wide):not(.is-style-dots){width:100px}.wp-block-separator.has-background:not(.is-style-dots){border-bottom:none;height:1px}.wp-block-separator.has-background:not(.is-style-wide):not(.is-style-dots){height:2px}.wp-block-table thead{border-bottom:3px solid}.wp-block-table tfoot{border-top:3px solid}.wp-block-table td,.wp-block-table th{padding:.5em;border:1px solid;word-break:normal}.wp-block-table figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-table figcaption{color:hsla(0,0%,100%,.65)}.wp-block-video figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-video figcaption{color:hsla(0,0%,100%,.65)}.wp-block-template-part.has-background{padding:1.25em 2.375em;margin-top:0;margin-bottom:0}
</style>
<link rel='stylesheet' id='mediaelement-css'  href='https://www.codeofaninja.com/wp-includes/js/mediaelement/mediaelementplayer-legacy.min.css?ver=4.2.16' media='all' />
<link rel='stylesheet' id='wp-mediaelement-css'  href='https://www.codeofaninja.com/wp-includes/js/mediaelement/wp-mediaelement.min.css?ver=6.0.2' media='all' />
<style id='global-styles-inline-css'>
body{--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #FFFFFF;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--color--dark-gray: #28303D;--wp--preset--color--gray: #39414D;--wp--preset--color--green: #D1E4DD;--wp--preset--color--blue: #D1DFE4;--wp--preset--color--purple: #D1D1E4;--wp--preset--color--red: #E4D1D1;--wp--preset--color--orange: #E4DAD1;--wp--preset--color--yellow: #EEEADD;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--gradient--purple-to-yellow: linear-gradient(160deg, #D1D1E4 0%, #EEEADD 100%);--wp--preset--gradient--yellow-to-purple: linear-gradient(160deg, #EEEADD 0%, #D1D1E4 100%);--wp--preset--gradient--green-to-yellow: linear-gradient(160deg, #D1E4DD 0%, #EEEADD 100%);--wp--preset--gradient--yellow-to-green: linear-gradient(160deg, #EEEADD 0%, #D1E4DD 100%);--wp--preset--gradient--red-to-yellow: linear-gradient(160deg, #E4D1D1 0%, #EEEADD 100%);--wp--preset--gradient--yellow-to-red: linear-gradient(160deg, #EEEADD 0%, #E4D1D1 100%);--wp--preset--gradient--purple-to-red: linear-gradient(160deg, #D1D1E4 0%, #E4D1D1 100%);--wp--preset--gradient--red-to-purple: linear-gradient(160deg, #E4D1D1 0%, #D1D1E4 100%);--wp--preset--duotone--dark-grayscale: url('#wp-duotone-dark-grayscale');--wp--preset--duotone--grayscale: url('#wp-duotone-grayscale');--wp--preset--duotone--purple-yellow: url('#wp-duotone-purple-yellow');--wp--preset--duotone--blue-red: url('#wp-duotone-blue-red');--wp--preset--duotone--midnight: url('#wp-duotone-midnight');--wp--preset--duotone--magenta-yellow: url('#wp-duotone-magenta-yellow');--wp--preset--duotone--purple-green: url('#wp-duotone-purple-green');--wp--preset--duotone--blue-orange: url('#wp-duotone-blue-orange');--wp--preset--font-size--small: 18px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 24px;--wp--preset--font-size--x-large: 42px;--wp--preset--font-size--extra-small: 16px;--wp--preset--font-size--normal: 20px;--wp--preset--font-size--extra-large: 40px;--wp--preset--font-size--huge: 96px;--wp--preset--font-size--gigantic: 144px;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
</style>
<link rel='stylesheet' id='toc-screen-css'  href='https://www.codeofaninja.com/wp-content/plugins/table-of-contents-plus/screen.min.css?ver=2106' media='all' />
<link rel='stylesheet' id='wpfront-scroll-top-css'  href='https://www.codeofaninja.com/wp-content/plugins/wpfront-scroll-top/css/wpfront-scroll-top.min.css?ver=2.0.7.08086' media='all' />
<link rel='stylesheet' id='edd-styles-css'  href='https://www.codeofaninja.com/wp-content/plugins/easy-digital-downloads/templates/edd.min.css?ver=3.0.4' media='all' />
<link rel='stylesheet' id='twenty-twenty-one-style-css'  href='https://www.codeofaninja.com/wp-content/themes/twentytwentyone/style.css?ver=1.6' media='all' />
<style id='twenty-twenty-one-style-inline-css'>
:root{--global--color-background: #ffffff;--global--color-primary: #000;--global--color-secondary: #000;--button--color-background: #000;--button--color-text-hover: #000;}
</style>
<link rel='stylesheet' id='twenty-twenty-one-print-style-css'  href='https://www.codeofaninja.com/wp-content/themes/twentytwentyone/assets/css/print.css?ver=1.6' media='print' />
<link rel='stylesheet' id='tt1-dark-mode-css'  href='https://www.codeofaninja.com/wp-content/themes/twentytwentyone/assets/css/style-dark-mode.css?ver=1.6' media='all' />
<link rel='stylesheet' id='twentytwentyone-jetpack-css'  href='https://www.codeofaninja.com/wp-content/plugins/jetpack/modules/theme-tools/compat/twentytwentyone.css?ver=11.3.2' media='all' />
<link rel='stylesheet' id='cookie-notice-front-css'  href='https://www.codeofaninja.com/wp-content/plugins/cookie-notice/css/front.min.css?ver=6.0.2' media='all' />
<link rel='stylesheet' id='social-logos-css'  href='https://www.codeofaninja.com/wp-content/plugins/jetpack/_inc/social-logos/social-logos.min.css?ver=11.3.2' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='https://www.codeofaninja.com/wp-content/plugins/jetpack/css/jetpack.css?ver=11.3.2' media='all' />
<script defer='defer' src='https://www.codeofaninja.com/wp-includes/js/jquery/jquery.min.js?ver=3.6.0' id='jquery-core-js'></script>
<script defer='defer' src='https://www.codeofaninja.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>

<!-- Google Analytics snippet added by Site Kit -->
<script defer='defer' src='https://www.googletagmanager.com/gtag/js?id=G-K50LKTJV8C' id='google_gtagjs-js' async></script>
<script id='google_gtagjs-js-after'>
window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}
gtag("js", new Date());
gtag("set", "developer_id.dZTNiMT", true);
gtag("config", "G-K50LKTJV8C");
</script>

<!-- End Google Analytics snippet added by Site Kit -->
<link rel="https://api.w.org/" href="https://www.codeofaninja.com/wp-json/" /><link rel="alternate" type="application/json" href="https://www.codeofaninja.com/wp-json/wp/v2/posts/19187" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.codeofaninja.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.codeofaninja.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 6.0.2" />
<link rel='shortlink' href='https://www.codeofaninja.com/?p=19187' />
<link rel="alternate" type="application/json+oembed" href="https://www.codeofaninja.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.codeofaninja.com%2Frest-api-authentication-example-php-jwt-tutorial%2F" />
<link rel="alternate" type="text/xml+oembed" href="https://www.codeofaninja.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.codeofaninja.com%2Frest-api-authentication-example-php-jwt-tutorial%2F&#038;format=xml" />
<meta name="generator" content="Site Kit by Google 1.81.0" /><meta name="generator" content="Easy Digital Downloads v3.0.4" />
<style>img#wpstats{display:none}</style>
	
<!-- Google AdSense snippet added by Site Kit -->
<meta name="google-adsense-platform-account" content="ca-host-pub-2644536267352236">
<meta name="google-adsense-platform-domain" content="sitekit.withgoogle.com">
<!-- End Google AdSense snippet added by Site Kit -->
<style id="custom-background-css">
body.custom-background { background-color: #ffffff; }
</style>
	<link rel="icon" href="https://www.codeofaninja.com/wp-content/uploads/2014/03/codeofaninja-logo-500w-36x36.png" sizes="32x32" />
<link rel="icon" href="https://www.codeofaninja.com/wp-content/uploads/2014/03/codeofaninja-logo-500w-300x300.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://www.codeofaninja.com/wp-content/uploads/2014/03/codeofaninja-logo-500w-180x180.png" />
<meta name="msapplication-TileImage" content="https://www.codeofaninja.com/wp-content/uploads/2014/03/codeofaninja-logo-500w-300x300.png" />
		<style id="wp-custom-css">
			.post-thumbnail .wp-post-image{
	border-radius:8px;	
}

.singular .entry-title{
	font-size:48px;
	font-weight:500;
	text-align:center;
}

.entry-content img,
.syntaxhighlighter {
	border:2px solid #f1f1f1;
	border-radius:8px !important;
}
.cookie-notice-container a {
	color: #ffffff !important;
}		</style>
		<!-- CUSTOM CSS -->
<style>
.grecaptcha-badge { visibility: hidden !important; }

.video_container iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.mt0{ margin-top:0px; }
.mb35px{ margin-bottom:35px; }

</style>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>

<!-- DOMAIN VERIFICATION -->
<meta name="p:domain_verify" content="cd6e26a6628cc84c4908bfc01e9bf221"/>

<!-- GOOGLE SEARCH CONSOLE -->
<meta name="google-site-verification" content="Fp-__6skmbOuU3KTwZwPdLe2b4A-xd5hegZOSYGdsWc" /></head>

<body data-rsssl=1 class="post-template-default single single-post postid-19187 single-format-standard custom-background wp-custom-logo wp-embed-responsive is-light-theme has-background-white no-js singular has-main-navigation no-widgets cookies-not-set">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-dark-grayscale"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0 0.49803921568627" /><feFuncG type="table" tableValues="0 0.49803921568627" /><feFuncB type="table" tableValues="0 0.49803921568627" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-grayscale"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0 1" /><feFuncG type="table" tableValues="0 1" /><feFuncB type="table" tableValues="0 1" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-purple-yellow"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0.54901960784314 0.98823529411765" /><feFuncG type="table" tableValues="0 1" /><feFuncB type="table" tableValues="0.71764705882353 0.25490196078431" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-blue-red"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0 1" /><feFuncG type="table" tableValues="0 0.27843137254902" /><feFuncB type="table" tableValues="0.5921568627451 0.27843137254902" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-midnight"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0 0" /><feFuncG type="table" tableValues="0 0.64705882352941" /><feFuncB type="table" tableValues="0 1" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-magenta-yellow"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0.78039215686275 1" /><feFuncG type="table" tableValues="0 0.94901960784314" /><feFuncB type="table" tableValues="0.35294117647059 0.47058823529412" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-purple-green"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0.65098039215686 0.40392156862745" /><feFuncG type="table" tableValues="0 1" /><feFuncB type="table" tableValues="0.44705882352941 0.4" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-blue-orange"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0.098039215686275 1" /><feFuncG type="table" tableValues="0 0.66274509803922" /><feFuncB type="table" tableValues="0.84705882352941 0.41960784313725" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><div id="page" class="site">
	<a class="skip-link screen-reader-text" href="#content">Skip to content</a>

	
<header id="masthead" class="site-header has-logo has-menu">

	

<div class="site-branding">

			<div class="site-logo"><a href="https://www.codeofaninja.com/" class="custom-logo-link" rel="home"><img width="5764" height="1152" src="https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3.png" class="custom-logo" alt="CodeOfaNinja" srcset="https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3.png 5764w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-300x60.png 300w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-768x153.png 768w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-1030x206.png 1030w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-1500x300.png 1500w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-705x141.png 705w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-450x90.png 450w" sizes="(max-width: 5764px) 100vw, 5764px" /></a></div>
	
						<p class="screen-reader-text"><a href="https://www.codeofaninja.com/">CodeOfaNinja</a></p>
			
	</div><!-- .site-branding -->
	
	<nav id="site-navigation" class="primary-navigation" aria-label="Primary menu">
		<div class="menu-button-container">
			<button id="primary-mobile-menu" class="button" aria-controls="primary-menu-list" aria-expanded="false">
				<span class="dropdown-icon open">Menu					<svg class="svg-icon" width="24" height="24" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.5 6H19.5V7.5H4.5V6ZM4.5 12H19.5V13.5H4.5V12ZM19.5 18H4.5V19.5H19.5V18Z" fill="currentColor"/></svg>				</span>
				<span class="dropdown-icon close">Close					<svg class="svg-icon" width="24" height="24" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M12 10.9394L5.53033 4.46973L4.46967 5.53039L10.9393 12.0001L4.46967 18.4697L5.53033 19.5304L12 13.0607L18.4697 19.5304L19.5303 18.4697L13.0607 12.0001L19.5303 5.53039L18.4697 4.46973L12 10.9394Z" fill="currentColor"/></svg>				</span>
			</button><!-- #primary-mobile-menu -->
		</div><!-- .menu-button-container -->
		<div class="primary-menu-container"><ul id="primary-menu-list" class="menu-wrapper"><li id="menu-item-28695" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-28695"><a href="https://www.codeofaninja.com/">Home</a></li>
<li id="menu-item-27775" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-27775"><a href="https://www.codeofaninja.com/web-development-tutorials/">Tutorials</a></li>
<li id="menu-item-27009" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-27009"><a href="https://www.codeofaninja.com/subscribe/">Subscribe</a></li>
<li id="menu-item-1569" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1569"><a title="This is who we are, our story." href="https://www.codeofaninja.com/about-us/">About Us</a></li>
<li id="menu-item-28053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-28053"><a href="https://www.codeofaninja.com/tools/">Tools</a></li>
</ul></div>	</nav><!-- #site-navigation -->

</header><!-- #masthead -->

	<div id="content" class="site-content">
		<div id="primary" class="content-area">
			<main id="main" class="site-main">

<article id="post-19187" class="post-19187 post type-post status-publish format-standard has-post-thumbnail hentry category-tut-rest-api-auth category-rest-api entry">

	<header class="entry-header alignwide">
		<h1 class="entry-title">REST API Authentication Example in PHP &#8211; JWT Tutorial</h1>		
		
			<figure class="post-thumbnail">
				<img width="800" height="420" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2.jpg" class="attachment-post-thumbnail size-post-thumbnail wp-post-image" alt="" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2.jpg 800w, https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2-300x158.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2-768x403.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2-705x370.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/rest-api-authentication-example-banner-2-450x236.jpg 450w" sizes="(max-width: 800px) 100vw, 800px" style="width:100%;height:52.5%;max-width:800px;" />							</figure><!-- .post-thumbnail -->

					</header><!-- .entry-header -->

	<div class="entry-content">
		
<p>Previously, we learned how to create a <a rel="noopener noreferrer" href="https://www.codeofaninja.com/2017/02/create-simple-rest-api-in-php.html" target="_blank">simple REST API in PHP</a>. The create, read, update and delete database records (CRUD operations) has been useful for our projects.</p>



<p>Today, we will learn how to authenticate a user using REST API and JSON Web Tokens or JWT.</p>



<p>In this tutorial, we will cover a basic sign-up or registration form, login, and logout operations, updating a user account, and more.</p>



<div id="toc_container" class="no_bullets"><p class="toc_title">Contents</p><ul class="toc_list"><li><a href="#Project_Overview"><span class="toc_number toc_depth_1">1</span> Project Overview</a><ul><li><a href="#What_is_JWT"><span class="toc_number toc_depth_2">1.1</span> What is JWT?</a></li><li><a href="#JWT_simple_analogy"><span class="toc_number toc_depth_2">1.2</span> JWT simple analogy</a></li><li><a href="#What_does_a_JWT_look_like"><span class="toc_number toc_depth_2">1.3</span> What does a JWT look like?</a></li><li><a href="#JWT_vs_OAuth"><span class="toc_number toc_depth_2">1.4</span> JWT vs OAuth</a></li></ul></li><li><a href="#Final_output"><span class="toc_number toc_depth_1">2</span> Final output</a><ul><li><a href="#LEVEL_1_source_code_output"><span class="toc_number toc_depth_2">2.1</span> LEVEL 1 source code output</a></li><li><a href="#LEVEL_2_source_code_output"><span class="toc_number toc_depth_2">2.2</span> LEVEL 2 source code output</a></li></ul></li><li><a href="#File_Structure"><span class="toc_number toc_depth_1">3</span> File Structure</a></li><li><a href="#Setup_the_Database"><span class="toc_number toc_depth_1">4</span> Setup the Database</a><ul><li><a href="#Create_a_database"><span class="toc_number toc_depth_2">4.1</span> Create a database</a></li><li><a href="#Create_a_table"><span class="toc_number toc_depth_2">4.2</span> Create a table</a></li><li><a href="#Create_a_directory_for_configuration"><span class="toc_number toc_depth_2">4.3</span> Create a directory for configuration</a></li><li><a href="#Create_a_database_connection_file"><span class="toc_number toc_depth_2">4.4</span> Create a database connection file</a></li></ul></li><li><a href="#Create_API_for_user_registration"><span class="toc_number toc_depth_1">5</span> Create API for user registration</a><ul><li><a href="#Create_a_file_for_creating_a_user"><span class="toc_number toc_depth_2">5.1</span> Create a file for creating a user</a></li><li><a href="#Connect_to_database_and_user_table"><span class="toc_number toc_depth_2">5.2</span> Connect to database and user table</a></li><li><a href="#Assign_submitted_data_to_object_properties"><span class="toc_number toc_depth_2">5.3</span> Assign submitted data to object properties</a></li><li><a href="#Use_the_create_method"><span class="toc_number toc_depth_2">5.4</span> Use the create() method</a></li><li><a href="#Create_the_user_object_class"><span class="toc_number toc_depth_2">5.5</span> Create the user object class</a></li><li><a href="#Add_a_create_method"><span class="toc_number toc_depth_2">5.6</span> Add a create() method</a></li><li><a href="#Output"><span class="toc_number toc_depth_2">5.7</span> Output</a></li></ul></li><li><a href="#Create_API_for_user_login"><span class="toc_number toc_depth_1">6</span> Create API for user login</a><ul><li><a href="#Create_a_file_for_user_login"><span class="toc_number toc_depth_2">6.1</span> Create a file for user login</a></li><li><a href="#Connect_to_database_and_user_table-2"><span class="toc_number toc_depth_2">6.2</span> Connect to database and user table</a></li><li><a href="#Check_if_email_exists"><span class="toc_number toc_depth_2">6.3</span> Check if email exists</a></li><li><a href="#Add_emailExists_method"><span class="toc_number toc_depth_2">6.4</span> Add emailExists() method</a></li><li><a href="#Include_files_to_encode_JWT"><span class="toc_number toc_depth_2">6.5</span> Include files to encode JWT</a></li><li><a href="#Generate_JSON_web_token"><span class="toc_number toc_depth_2">6.6</span> Generate JSON web token</a></li><li><a href="#Tell_the_user_login_failed"><span class="toc_number toc_depth_2">6.7</span> Tell the user login failed</a></li><li><a href="#Create_core_configuration_file"><span class="toc_number toc_depth_2">6.8</span> Create core configuration file</a></li><li><a href="#Download_PHP-JWT_from_GitHub"><span class="toc_number toc_depth_2">6.9</span> Download PHP-JWT from GitHub</a></li><li><a href="#Output-2"><span class="toc_number toc_depth_2">6.10</span> Output</a></li></ul></li><li><a href="#Create_API_for_JWT_validation"><span class="toc_number toc_depth_1">7</span> Create API for JWT validation</a><ul><li><a href="#Create_a_file_to_validate_JWT"><span class="toc_number toc_depth_2">7.1</span> Create a file to validate JWT</a></li><li><a href="#Include_files_to_decode_JWT"><span class="toc_number toc_depth_2">7.2</span> Include files to decode JWT</a></li><li><a href="#Retrieve_given_JWT"><span class="toc_number toc_depth_2">7.3</span> Retrieve given JWT</a></li><li><a href="#Decode_JWT_if_it_exists"><span class="toc_number toc_depth_2">7.4</span> Decode JWT if it exists</a></li><li><a href="#Show_error_if_decoding_failed"><span class="toc_number toc_depth_2">7.5</span> Show error if decoding failed</a></li><li><a href="#Show_error_message_if_JWT_is_empty"><span class="toc_number toc_depth_2">7.6</span> Show error message if JWT is empty</a></li><li><a href="#Output-3"><span class="toc_number toc_depth_2">7.7</span> Output</a></li></ul></li><li><a href="#Create_API_for_user_account"><span class="toc_number toc_depth_1">8</span> Create API for user account</a><ul><li><a href="#Create_a_file_for_updating_user_account"><span class="toc_number toc_depth_2">8.1</span> Create a file for updating user account</a></li><li><a href="#Include_files_to_decode_JWT-2"><span class="toc_number toc_depth_2">8.2</span> Include files to decode JWT</a></li><li><a href="#Connect_to_database_and_user_table-3"><span class="toc_number toc_depth_2">8.3</span> Connect to database and user table</a></li><li><a href="#Retrieve_given_JWT-2"><span class="toc_number toc_depth_2">8.4</span> Retrieve given JWT</a></li><li><a href="#Decode_JWT_if_it_exists-2"><span class="toc_number toc_depth_2">8.5</span> Decode JWT if it exists</a></li><li><a href="#Show_error_message_if_decoding_fails"><span class="toc_number toc_depth_2">8.6</span> Show error message if decoding fails</a></li><li><a href="#Set_user_property_values"><span class="toc_number toc_depth_2">8.7</span> Set user property values</a></li><li><a href="#Use_the_update_method"><span class="toc_number toc_depth_2">8.8</span> Use the update() method</a></li><li><a href="#Add_update_method_in_user_class"><span class="toc_number toc_depth_2">8.9</span> Add update() method in user class</a></li><li><a href="#Re-generate_JWT"><span class="toc_number toc_depth_2">8.10</span> Re-generate JWT</a></li><li><a href="#Show_error_message_if_JWT_is_empty-2"><span class="toc_number toc_depth_2">8.11</span> Show error message if JWT is empty</a></li><li><a href="#Output-4"><span class="toc_number toc_depth_2">8.12</span> Output</a></li></ul></li><li><a href="#Create_interface_for_user_registration"><span class="toc_number toc_depth_1">9</span> Create interface for user registration</a><ul><li><a href="#91_Create_index_page"><span class="toc_number toc_depth_2">9.1</span> 9.1 Create index page</a></li><li><a href="#Add_navigation_bar"><span class="toc_number toc_depth_2">9.2</span> Add navigation bar</a></li><li><a href="#Add_content_section"><span class="toc_number toc_depth_2">9.3</span> Add content section</a></li><li><a href="#Add_Bootstrap_4_and_custom_CSS_links"><span class="toc_number toc_depth_2">9.4</span> Add Bootstrap 4 and custom CSS links</a></li><li><a href="#Create_custom_CSS_file"><span class="toc_number toc_depth_2">9.5</span> Create custom CSS file</a></li><li><a href="#Add_jQuery_and_Bootstrap_4_script_links"><span class="toc_number toc_depth_2">9.6</span> Add jQuery and Bootstrap 4 script links</a></li><li><a href="#Show_a_sign_up_HTML_form"><span class="toc_number toc_depth_2">9.7</span> Show a sign up HTML form</a></li><li><a href="#Trigger_when_sign_up_form_is_submitted"><span class="toc_number toc_depth_2">9.8</span> Trigger when sign up form is submitted</a></li><li><a href="#Remove_any_prompt_messages"><span class="toc_number toc_depth_2">9.9</span> Remove any prompt messages</a></li><li><a href="#Add_serializeObject_function"><span class="toc_number toc_depth_2">9.10</span> Add serializeObject function</a></li><li><a href="#Output-5"><span class="toc_number toc_depth_2">9.11</span> Output</a></li></ul></li><li><a href="#Create_a_login_page"><span class="toc_number toc_depth_1">10</span> Create a login page</a><ul><li><a href="#101_Trigger_when_login_menu_was_clicked"><span class="toc_number toc_depth_2">10.1</span> 10.1 Trigger when login menu was clicked</a></li><li><a href="#Show_login_HTML_form"><span class="toc_number toc_depth_2">10.2</span> Show login HTML form</a></li><li><a href="#Add_setCookie_function"><span class="toc_number toc_depth_2">10.3</span> Add setCookie() function</a></li><li><a href="#Change_menu_appearance"><span class="toc_number toc_depth_2">10.4</span> Change menu appearance</a></li><li><a href="#Output-6"><span class="toc_number toc_depth_2">10.5</span> Output</a></li></ul></li><li><a href="#Show_login_responses"><span class="toc_number toc_depth_1">11</span> Show login responses</a><ul><li><a href="#Submitted_form_trigger"><span class="toc_number toc_depth_2">11.1</span> Submitted form trigger</a></li><li><a href="#Create_an_HTTP_request"><span class="toc_number toc_depth_2">11.2</span> Create an HTTP request</a></li><li><a href="#Show_home_page_HTML"><span class="toc_number toc_depth_2">11.3</span> Show home page HTML</a></li><li><a href="#Add_home_page_HTML"><span class="toc_number toc_depth_2">11.4</span> Add home page HTML</a></li><li><a href="#Add_getCookie_function"><span class="toc_number toc_depth_2">11.5</span> Add getCookie() function</a></li><li><a href="#Show_error_for_invalid_login"><span class="toc_number toc_depth_2">11.6</span> Show error for invalid login</a></li><li><a href="#Output-7"><span class="toc_number toc_depth_2">11.7</span> Output</a></li></ul></li><li><a href="#On_click_of_Home_menu"><span class="toc_number toc_depth_1">12</span> On click of Home menu</a><ul><li><a href="#Add_trigger_to_show_home_page"><span class="toc_number toc_depth_2">12.1</span> Add trigger to show home page</a></li><li><a href="#Set_logged-in_menu"><span class="toc_number toc_depth_2">12.2</span> Set logged-in menu</a></li><li><a href="#Show_login_page_if_JWT_is_invalid"><span class="toc_number toc_depth_2">12.3</span> Show login page if JWT is invalid</a></li><li><a href="#Output-8"><span class="toc_number toc_depth_2">12.4</span> Output</a></li></ul></li><li><a href="#Show_user_account_page"><span class="toc_number toc_depth_1">13</span> Show user account page</a><ul><li><a href="#Add_trigger_to_show_account_form"><span class="toc_number toc_depth_2">13.1</span> Add trigger to show account form</a></li><li><a href="#Verify_if_JWT_is_valid"><span class="toc_number toc_depth_2">13.2</span> Verify if JWT is valid</a></li><li><a href="#Show_account_form_if_JWT_is_valid"><span class="toc_number toc_depth_2">13.3</span> Show account form if JWT is valid</a></li><li><a href="#Show_login_page_if_JWT_is_invalid-2"><span class="toc_number toc_depth_2">13.4</span> Show login page if JWT is invalid</a></li><li><a href="#Add_a_trigger_for_updating_a_user_account"><span class="toc_number toc_depth_2">13.5</span> Add a trigger for updating a user account</a></li><li><a href="#Get_form_data_and_JWT"><span class="toc_number toc_depth_2">13.6</span> Get form data and JWT</a></li><li><a href="#Send_data_to_API"><span class="toc_number toc_depth_2">13.7</span> Send data to API</a></li><li><a href="#Show_error_message"><span class="toc_number toc_depth_2">13.8</span> Show error message</a></li><li><a href="#Output-9"><span class="toc_number toc_depth_2">13.9</span> Output</a></li></ul></li><li><a href="#Add_JavaScript_for_user_logout"><span class="toc_number toc_depth_1">14</span> Add JavaScript for user logout</a><ul><li><a href="#Add_a_trigger_to_logout"><span class="toc_number toc_depth_2">14.1</span> Add a trigger to logout</a></li><li><a href="#Output-10"><span class="toc_number toc_depth_2">14.2</span> Output</a></li></ul></li><li><a href="#Download_source_codes"><span class="toc_number toc_depth_1">15</span> Download source codes</a><ul><li><a href="#Download_LEVEL_1_source_code"><span class="toc_number toc_depth_2">15.1</span> Download LEVEL 1 source code</a></li><li><a href="#152_Download_LEVEL_2_source_code"><span class="toc_number toc_depth_2">15.2</span> 15.2 Download LEVEL 2 source code</a></li></ul></li><li><a href="#What8217s_Next"><span class="toc_number toc_depth_1">16</span> What&#8217;s Next?</a></li><li><a href="#Related_Tutorials"><span class="toc_number toc_depth_1">17</span> Related Tutorials</a></li><li><a href="#Notes"><span class="toc_number toc_depth_1">18</span> Notes</a><ul><li><a href="#Found_An_Issue"><span class="toc_number toc_depth_2">18.1</span> Found An Issue?</a></li><li><a href="#Subscribe_to_CodeOfaNinja"><span class="toc_number toc_depth_2">18.2</span> Subscribe to CodeOfaNinja</a></li><li><a href="#Thank_You"><span class="toc_number toc_depth_2">18.3</span> Thank You!</a></li><li><a href="#Share_our_tutorial"><span class="toc_number toc_depth_2">18.4</span> Share our tutorial</a></li></ul></li></ul></div>
<h2><span id="Project_Overview">Project Overview</span></h2>



<h3><span id="What_is_JWT">What is JWT?</span></h3>



<p>In technical terms, JSON Web Token or JWT is an open standard (<a href="https://tools.ietf.org/html/rfc7519" target="_blank" rel="noopener noreferrer">RFC 7519</a>) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object.</p>



<p>This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA.</p>



<ul><li>JWTs are commonly used for organizations that have multiple applications or domains. Their users need to be authenticated (log in) once and be authorized to access multiple applications, domains, or resources of that organization.</li><li>JWTs are also used for an application that uses multiple servers. </li><li>In a single-server application, users can be authorized by session ID. A server will need to find (by lookup) a valid session ID on every HTTP request. Session IDs are stored on the server.</li><li>If your application needs to scale and needs multiple servers, you cannot use session IDs for user authorization. Every HTTP request will be routed to a different server where the session ID does not exist. Users will be logged out unexpectedly.</li><li>JWT helps solve the multi-server authorization problem by storing the authorized user information on the client-side, not on the server. JWT is sent on every HTTP request and it can be validated (by code) of any server used by the application.</li></ul>



<p>You may read more <a href="https://jwt.io/introduction/" target="_blank" rel="noreferrer noopener">here</a> and <a href="https://en.wikipedia.org/wiki/JSON_Web_Token" target="_blank" rel="noreferrer noopener">here</a>.</p>



<h3><span id="JWT_simple_analogy">JWT simple analogy</span></h3>



<p>The following is my own simple analogy. If you think you have a better one, please let me know via email. My email address is <code><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="701d191b1530131f14151f16111e191e1a115e131f1d">[email&#160;protected]</a></code></p>



<ol><li><strong>John (client)</strong> is a student. <strong>Michael (server)</strong> is the professor. John sends his <strong>test paper (login credentials)</strong> to Michael. </li><li>Michael checked, validated, and <strong>signed the test paper (JWT)</strong>. This proves that John is a student of Michael. </li><li>Michael sends back the <strong>signed test paper (JWT</strong>) to John.</li><li>If John has <strong>further questions about the test (HTTP requests)</strong>, he can present his signed test paper to Michael. </li><li>Michael will <strong>answer (response)</strong> because he signed the test paper.</li><li>Now, this is the useful part. Michael is not available. <strong>Vincent (another server)</strong> is the professor that is available. </li><li>John has <strong>further questions about the test (HTTP requests)</strong>. Vincent needs proof that John is a student of Michael. </li><li>John presented his <strong>signed test paper (JWT) </strong>to Vincent. Vincent will <strong>answer (response)</strong> because it was signed by Michael.</li><li>If the test paper was not signed, Michael and Vincent will not answer John&#8217;s further questions.</li></ol>



<p>I&#8217;ve found another analogy that can be useful for you. Read it <a href="https://dev.to/hemanth/explain-jwt-like-im-five" target="_blank" rel="noopener noreferrer">here</a>.</p>



<p>The videos below will help explain the analogy.</p>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<iframe loading="lazy" title="What Is JWT and Why Should You Use JWT" width="750" height="422" src="https://www.youtube.com/embed/7Q17ubqLfaM?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div></figure>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<iframe loading="lazy" title="What is JWT authorization really about - Java Brains" width="750" height="422" src="https://www.youtube.com/embed/soGRyl9ztjI?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div></figure>



<h3><span id="What_does_a_JWT_look_like">What does a JWT look like?</span></h3>



<p>A JSON Web Token or JWT looks like a string with three parts separated by dots. The following is an example of JWT.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: plain; title: ; notranslate" title="">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9leGFtcGxlLm9yZyIsImF1ZCI6Imh0dHA6XC9cL2V4YW1wbGUuY29tIiwiaWF0IjoxMzU2OTk5NTI0LCJuYmYiOjEzNTcwMDAwMDAsImRhdGEiOnsiaWQiOiI5IiwiZmlyc3RuYW1lIjoiTWlrZSIsImxhc3RuYW1lIjoiRGFsaXNheSIsImVtYWlsIjoibWlrZUBjb2Rlb2ZhbmluamEuY29tIn19.h_Q4gJ3epcpwdwNCNCYxtiKdXsN34W9MEjxZ7sx21Vs
</pre></div>


<p>JWT in the serialized form represents a string of the following format:</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: plain; title: ; notranslate" title="">header.payload.signature
</pre></div>


<p>The <code>header</code> component contains information about how the JWT signature should be computed. The <code>payload</code> component is the data that is stored inside the JWT. This can be the user information like user ID, name and email.</p>



<p>To create the <code>signature</code> component, you have to take the encoded header, the encoded payload, a secret, the algorithm specified in the header, and sign that.</p>



<p>In this tutorial, we won&#8217;t have to worry about generating or encoding and decoding JWT because we will use a library called <a href="https://github.com/firebase/php-jwt" target="_blank" rel="noopener noreferrer">PHP-JWT</a>.</p>



<h3><span id="JWT_vs_OAuth">JWT vs OAuth</span></h3>



<p>We explained the JWT above. JWT is a token format and we can say it is a simple authorization protocol. <a rel="noopener noreferrer" href="https://en.wikipedia.org/wiki/OAuth" target="_blank">OAuth</a> is an authentication framework that can use JWT as a token.</p>



<p><a href="https://oauth.net/" target="_blank" rel="noopener noreferrer">OAuth</a> is used as a way for Internet users to grant websites or applications access to their information on other websites but without giving them the passwords.</p>



<p>Use JWT if:</p>



<ul><li>You have a very simple use-case, like a single client application.</li><li>Your users access their resources only through your own application.</li><li>You want a quick-to-implement and simple stateless HTTP authorization to an API.</li></ul>



<p>Use OAuth if:</p>



<ul><li>Your users can access their resources through another application you don&#8217;t own.</li><li>You want to provide API to browser-based apps, native mobile apps, or desktop apps.</li><li>You want to use an Authentication Server that keeps track of tokens.</li></ul>



<p>Please <a href="https://stackoverflow.com/questions/39909419/jwt-vs-oauth-authentication" target="_blank" rel="noopener noreferrer">read more here</a> and <a href="https://community.apigee.com/questions/21139/jwt-vs-oauth.html" target="_blank" rel="noopener noreferrer">here</a>.</p>



<h2><span id="Final_output">Final output</span></h2>



<h3><span id="LEVEL_1_source_code_output">LEVEL 1 source code output</span></h3>



<p>It is important to visualize what we are trying to achieve in this tutorial. At the end of this tutorial, we will achieve the LEVEL 1 source code as seen on the screenshots below.</p>



<p>Please click a photo below to enlarge and use the arrow icons to navigate the slideshow.</p>



<p>[espro-slider id=19422]</p>



<h3><span id="LEVEL_2_source_code_output">LEVEL 2 source code output</span></h3>



<p><em>Screenshots coming soon! See the list of features in section 14.2 below.</em></p>



<p>The LEVEL 2 source code shows more amazing features that you can learn once you completed studying the LEVEL 1 source code.</p>



<p>For now, let&#8217;s proceed to the complete tutorial of our LEVEL 1 source code below. Let&#8217;s code!</p>



<h2><span id="File_Structure">File Structure</span></h2>



<p>At the end of this tutorial, we will have the following folders and files.</p>



<p>├─ rest-api-authentication-example/ &#8211; name of the project folder.<br>├─── api/ &#8211; main folder of the API.<br>├────── config/<br>├───────── core.php &#8211; file used for common settings or variables.<br>├───────── database.php &#8211; file used for connecting to the database.<br>├────── libs/<br>├───────── php-jwt-master/ &#8211; folder of the JWT library developed by Google.<br>├────── objects/<br>├───────── user.php &#8211; the class file that will handle the database queries.<br>├────── create_user.php &#8211; the file that will process the input of from &#8220;sign up&#8221; form.<br>├────── login.php &#8211; the file that will encode and generate a JSON web token.<br>├────── update_user.php &#8211; the file that will process the input of from &#8220;user account&#8221; form.<br>├────── validate_token.php &#8211; the file that will validate or decode the JSON web token.<br>├─── custom.css &#8211; contains any customization in the user interface.<br>├─── index.html &#8211; contains HTML and JavaScript that renders different user interfaces.</p>



<h2><span id="Setup_the_Database">Setup the Database</span></h2>



<h3><span id="Create_a_database">Create a database</span></h3>



<ul><li>Open your PhpMyAdmin <a rel="noopener noreferrer" href="http://localhost/phpmyadmin/" target="_blank">localhost/phpmyadmin</a> </li><li>Create a database called <code>api_db</code></li></ul>



<h3><span id="Create_a_table">Create a table</span></h3>



<ul><li>On the <code>api_db</code> database, create a new table called <code>users</code>.</li><li>Put the following fields on the <code>users</code> table.</li></ul>



<figure class="wp-block-image"><img loading="lazy" width="1084" height="230" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/users-table-fields.jpg" alt="" class="wp-image-19360" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/users-table-fields.jpg 1084w, https://www.codeofaninja.com/wp-content/uploads/2018/09/users-table-fields-300x64.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/users-table-fields-768x163.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/users-table-fields-1030x219.jpg 1030w, https://www.codeofaninja.com/wp-content/uploads/2018/09/users-table-fields-705x150.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/users-table-fields-450x95.jpg 450w" sizes="(max-width: 1084px) 100vw, 1084px" /></figure>



<h3><span id="Create_a_directory_for_configuration">Create a directory for configuration</span></h3>



<ul><li>Create our main project folder and put <code>rest-api-authentication-example</code> as its name.</li><li>If you&#8217;re using XAMPP, you must create it inside the <code>htdocs</code> folder. In my case, I created it inside <code>C:\xampp\htdocs</code> directory.</li><li>Open <code>rest-api-authentication-example</code> folder. </li><li>Create <code>api</code> folder. </li><li>Open <code>api</code> folder. </li><li>Create <code>config</code> folder.</li></ul>



<h3><span id="Create_a_database_connection_file">Create a database connection file</span></h3>



<ul><li>Open <code>config</code> folder. </li><li>Create a new file called <code>database.php</code>.</li></ul>



<p>Place the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">&lt;?php
// used to get mysql database connection
class Database{

	// specify your own database credentials
	private $host = &quot;localhost&quot;;
	private $db_name = &quot;api_db&quot;;
	private $username = &quot;root&quot;;
	private $password = &quot;&quot;;
	public $conn;

	// get the database connection
	public function getConnection(){

		$this-&gt;conn = null;

		try{
			$this-&gt;conn = new PDO(&quot;mysql:host=&quot; . $this-&gt;host . &quot;;dbname=&quot; . $this-&gt;db_name, $this-&gt;username, $this-&gt;password);
		}catch(PDOException $exception){
			echo &quot;Connection error: &quot; . $exception-&gt;getMessage();
		}

		return $this-&gt;conn;
	}
}
?&gt;
</pre></div>


<h2><span id="Create_API_for_user_registration">Create API for user registration</span></h2>



<h3><span id="Create_a_file_for_creating_a_user">Create a file for creating a user</span></h3>



<ul><li>Open <code>rest-api-authentication-example</code> folder. </li><li>Create a folder called <code>api</code>.</li><li>Open the <code>api</code> folder. </li><li>Create a new file called <code>create_user.php</code>.</li></ul>



<p>We need to set headers on this new file so that it will only accept JSON data from a specific URL. Place the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">&lt;?php
// required headers
header(&quot;Access-Control-Allow-Origin: http://localhost/rest-api-authentication-example/&quot;);
header(&quot;Content-Type: application/json; charset=UTF-8&quot;);
header(&quot;Access-Control-Allow-Methods: POST&quot;);
header(&quot;Access-Control-Max-Age: 3600&quot;);
header(&quot;Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With&quot;);

// database connection will be here
</pre></div>


<h3><span id="Connect_to_database_and_user_table">Connect to database and user table</span></h3>



<p>We are saving the user registration information on a database so we need the database connection. We need to instantiate the <code>user</code> table as well because this will make the <code>insert</code> query later.</p>



<p>Replace <code>// database connection will be here</code> comment of <code>create_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// files needed to connect to database
include_once &#039;config/database.php&#039;;
include_once &#039;objects/user.php&#039;;

// get database connection
$database = new Database();
$db = $database-&gt;getConnection();

// instantiate product object
$user = new User($db);

// submitted data will be here
</pre></div>


<h3><span id="Assign_submitted_data_to_object_properties">Assign submitted data to object properties</span></h3>



<p>The user information will be submitted through an HTML form and JavaScript code. We will see this code later.</p>



<p>We need to assign the submitted data on the object properties such as <code>firstname</code>, <code>lastname</code>, etc.</p>



<p>Replace <code>// submitted data will be here</code> comment of <code>create_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// get posted data
$data = json_decode(file_get_contents(&quot;php://input&quot;));

// set product property values
$user-&gt;firstname = $data-&gt;firstname;
$user-&gt;lastname = $data-&gt;lastname;
$user-&gt;email = $data-&gt;email;
$user-&gt;password = $data-&gt;password;

// use the create() method here
</pre></div>


<h3><span id="Use_the_create_method">Use the create() method</span></h3>



<p>One the code below, we check if the user data is not empty. We also use the <code>user</code> object&#8217;s <code>create()</code> method. It will tell the user if the user was created or not.</p>



<p>Replace <code>// use the create() method here</code> comment of <code>create_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// create the user
if(
    !empty($user-&gt;firstname) &amp;&amp;
    !empty($user-&gt;email) &amp;&amp;
    !empty($user-&gt;password) &amp;&amp;
    $user-&gt;create()
){

    // set response code
    http_response_code(200);

    // display message: user was created
    echo json_encode(array(&quot;message&quot; =&gt; &quot;User was created.&quot;));
}

// message if unable to create user
else{

    // set response code
    http_response_code(400);

    // display message: unable to create user
    echo json_encode(array(&quot;message&quot; =&gt; &quot;Unable to create user.&quot;));
}
?&gt;
</pre></div>


<h3><span id="Create_the_user_object_class">Create the user object class</span></h3>



<p>The previous section will not work without the user object class. This is where we&#8217;ll place all the <code>user</code> methods that contains database queries.</p>



<p>If you&#8217;re not familiar with private or public scopes, please learn from <a href="https://stackoverflow.com/a/21902271" target="_blank" rel="noopener noreferrer">this resource</a>.</p>



<ul><li>Open the <code>api</code> folder. </li><li>Open <code>objects</code> folder.</li><li>Create a new file called <code>user.php</code>. </li><li>Place the following code.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">&lt;?php
// &#039;user&#039; object
class User{

	// database connection and table name
	private $conn;
	private $table_name = &quot;users&quot;;

	// object properties
	public $id;
	public $firstname;
	public $lastname;
	public $email;
	public $password;

	// constructor
	public function __construct($db){
		$this-&gt;conn = $db;
	}

// create() method will be here
}
</pre></div>


<h3><span id="Add_a_create_method">Add a create() method</span></h3>



<p>The code below shows the INSERT query, data sanitation, and binding, and we used the built-in <code>password_hash()</code> method to secure the user&#8217;s password on the database.</p>



<p>If the execution is a success, the user information will be saved on the database.</p>



<p>Replace the <code>// create() method will be here</code> comment of <code>user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// create new user record
function create(){

	// insert query
	$query = &quot;INSERT INTO &quot; . $this-&gt;table_name . &quot;
            SET
				firstname = :firstname,
				lastname = :lastname,
				email = :email,
				password = :password&quot;;

	// prepare the query
	$stmt = $this-&gt;conn-&gt;prepare($query);

	// sanitize
	$this-&gt;firstname=htmlspecialchars(strip_tags($this-&gt;firstname));
	$this-&gt;lastname=htmlspecialchars(strip_tags($this-&gt;lastname));
	$this-&gt;email=htmlspecialchars(strip_tags($this-&gt;email));
	$this-&gt;password=htmlspecialchars(strip_tags($this-&gt;password));

	// bind the values
	$stmt-&gt;bindParam(&#039;:firstname&#039;, $this-&gt;firstname);
	$stmt-&gt;bindParam(&#039;:lastname&#039;, $this-&gt;lastname);
	$stmt-&gt;bindParam(&#039;:email&#039;, $this-&gt;email);

	// hash the password before saving to database
	$password_hash = password_hash($this-&gt;password, PASSWORD_BCRYPT);
	$stmt-&gt;bindParam(&#039;:password&#039;, $password_hash);

	// execute the query, also check if query was successful
	if($stmt-&gt;execute()){
		return true;
	}

	return false;
}

// emailExists() method will be here
</pre></div>


<h3><span id="Output">Output</span></h3>



<p>You need to use <a href="https://www.getpostman.com/" target="_blank" rel="noopener noreferrer">POSTMAN</a> to test our API. Download your version of POSTMAN <a href="https://www.getpostman.com/apps" target="_blank" rel="noopener noreferrer">here</a>.</p>



<ul><li>First, we will <strong>test for the successful creation of a user</strong>. </li><li>Launch POSTMAN.</li><li>Enter the following as the request URL</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: plain; title: ; notranslate" title="">http://localhost/rest-api-authentication-example/api/create_user.php
</pre></div>


<ul><li>Click &#8220;Body&#8221; tab. </li><li>Click &#8220;raw&#8221;. </li><li>Enter the following JSON.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">{
 "firstname" : "Mike",
 "lastname" : "Dalisay",
 "email" : "<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="690400020c290a060d0c060f080700070308470a0604">[email&#160;protected]</a>",
 "password" : "555"
}
</pre></div>


<ul><li>Click the blue &#8220;Send&#8221; button. The output will be:</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">{
    "message": "User was created."
}
</pre></div>


<ul><li>On POSTMAN, it should look like this:</li></ul>



<figure class="wp-block-image"><img loading="lazy" width="1452" height="693" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-created-2.jpg" alt="" class="wp-image-19293" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-created-2.jpg 1452w, https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-created-2-300x143.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-created-2-768x367.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-created-2-1030x492.jpg 1030w, https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-created-2-705x336.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-created-2-450x215.jpg 450w" sizes="(max-width: 1452px) 100vw, 1452px" /></figure>



<ul><li>To <strong>test for a failed creation of a user</strong>, just remove the value of the password above.</li><li>Click the blue &#8220;Send&#8221; button.</li><li>It should look like this:</li></ul>



<figure class="wp-block-image"><img loading="lazy" width="1448" height="701" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-create-user-3.jpg" alt="" class="wp-image-19304" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-create-user-3.jpg 1448w, https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-create-user-3-300x145.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-create-user-3-768x372.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-create-user-3-1030x499.jpg 1030w, https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-create-user-3-705x341.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-create-user-3-450x218.jpg 450w" sizes="(max-width: 1448px) 100vw, 1448px" /></figure>



<h2><span id="Create_API_for_user_login">Create API for user login</span></h2>



<h3><span id="Create_a_file_for_user_login">Create a file for user login</span></h3>



<p>On the code below, we set the file headers so that it will know where the request should come from and what type of data is accepted.</p>



<ul><li>Open <code>rest-api-authentication-example</code> folder.</li><li>Create a new file called <code>login.php</code>. </li><li>Place the following code.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">&lt;?php
// required headers
header(&quot;Access-Control-Allow-Origin: http://localhost/rest-api-authentication-example/&quot;);
header(&quot;Content-Type: application/json; charset=UTF-8&quot;);
header(&quot;Access-Control-Allow-Methods: POST&quot;);
header(&quot;Access-Control-Max-Age: 3600&quot;);
header(&quot;Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With&quot;);

// database connection will be here
</pre></div>


<h3><span id="Connect_to_database_and_user_table-2">Connect to database and user table</span></h3>



<p>We will compare the user email and password from the database so we need the database connection.</p>



<p>We need to instantiate the user table as well because this will allow us to verify if the email exists and read the hashed password.</p>



<p>Replace <code>// database connection will be here</code> comment of <code>login.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// files needed to connect to database
include_once &#039;config/database.php&#039;;
include_once &#039;objects/user.php&#039;;

// get database connection
$database = new Database();
$db = $database-&gt;getConnection();

// instantiate user object
$user = new User($db);

// check email existence here
</pre></div>


<h3><span id="Check_if_email_exists">Check if email exists</span></h3>



<p>On the code below, we get the email submitted by the user through the login form. We check if the email exists on our database.</p>



<p>Replace <code>// check email existence here</code> comment of <code>login.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// get posted data
$data = json_decode(file_get_contents(&quot;php://input&quot;));

// set product property values
$user-&gt;email = $data-&gt;email;
$email_exists = $user-&gt;emailExists();

// files for jwt will be here
</pre></div>


<h3><span id="Add_emailExists_method">Add emailExists() method</span></h3>



<p>We will add an emailExists() method on our <code>user</code> object class. This method will return <code>true</code> if the submitted email exists, else it will return <code>false</code>.</p>



<p>Replace <code>// emailExists() method will be here</code> comment of <code>/api/objects/user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// check if given email exist in the database
function emailExists(){

	// query to check if email exists
	$query = &quot;SELECT id, firstname, lastname, password
			FROM &quot; . $this-&gt;table_name . &quot;
			WHERE email = ?
			LIMIT 0,1&quot;;

	// prepare the query
	$stmt = $this-&gt;conn-&gt;prepare( $query );

	// sanitize
	$this-&gt;email=htmlspecialchars(strip_tags($this-&gt;email));

	// bind given email value
	$stmt-&gt;bindParam(1, $this-&gt;email);

	// execute the query
	$stmt-&gt;execute();

	// get number of rows
	$num = $stmt-&gt;rowCount();

	// if email exists, assign values to object properties for easy access and use for php sessions
	if($num&gt;0){

		// get record details / values
		$row = $stmt-&gt;fetch(PDO::FETCH_ASSOC);

		// assign values to object properties
		$this-&gt;id = $row&#091;&#039;id&#039;];
		$this-&gt;firstname = $row&#091;&#039;firstname&#039;];
		$this-&gt;lastname = $row&#091;&#039;lastname&#039;];
		$this-&gt;password = $row&#091;&#039;password&#039;];

		// return true because email exists in the database
		return true;
	}

	// return false if email does not exist in the database
	return false;
}

// update() method will be here
</pre></div>


<h3><span id="Include_files_to_encode_JWT">Include files to encode JWT</span></h3>



<p>The code below shows the necessary files we needed to include to generate or encode a JSON web token.</p>



<p>Replace <code>// files for jwt will be here</code> comment of <code>login.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// generate json web token
include_once 'config/core.php';
include_once 'libs/php-jwt-master/src/BeforeValidException.php';
include_once 'libs/php-jwt-master/src/ExpiredException.php';
include_once 'libs/php-jwt-master/src/SignatureInvalidException.php';
include_once 'libs/php-jwt-master/src/JWT.php';
use \Firebase\JWT\JWT;

// generate jwt will be here
</pre></div>


<h3><span id="Generate_JSON_web_token">Generate JSON web token</span></h3>



<p>The code below will check if the email exists and if the password matches what is in the database. We used the built-in <code>password_verify()</code> function to do the matching.</p>



<p>If login is valid, it will generate the JSON Web Token.</p>



<p>Replace <code>// generate jwt will be here</code> comment of <code>login.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// check if email exists and if password is correct
if($email_exists &amp;&amp; password_verify($data-&gt;password, $user-&gt;password)){

    $token = array(
       &quot;iat&quot; =&gt; $issued_at,
       &quot;exp&quot; =&gt; $expiration_time,
       &quot;iss&quot; =&gt; $issuer,
       &quot;data&quot; =&gt; array(
           &quot;id&quot; =&gt; $user-&gt;id,
           &quot;firstname&quot; =&gt; $user-&gt;firstname,
           &quot;lastname&quot; =&gt; $user-&gt;lastname,
           &quot;email&quot; =&gt; $user-&gt;email
       )
    );

    // set response code
    http_response_code(200);

    // generate jwt
    $jwt = JWT::encode($token, $key);
    echo json_encode(
            array(
                &quot;message&quot; =&gt; &quot;Successful login.&quot;,
                &quot;jwt&quot; =&gt; $jwt
            )
        );

}

// login failed will be here
</pre></div>


<h3><span id="Tell_the_user_login_failed">Tell the user login failed</span></h3>



<p>If the email does not exist or the password did not match, tell the user he cannot login.</p>



<p>Replace <code>// login failed will be here</code> comment of <code>login.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// login failed
else{

    // set response code
    http_response_code(401);

    // tell the user login failed
    echo json_encode(array(&quot;message&quot; =&gt; &quot;Login failed.&quot;));
}
?&gt;
</pre></div>


<h3><span id="Create_core_configuration_file">Create core configuration file</span></h3>



<p>The <code>login.php</code> file will not work without the <code>core.php</code> file. This file contains common settings or variables of our application.</p>



<p>We have variables used by our JWT library to encode and decode a token. <code>$key</code>&#8216;s value must be your own and unique secret key.</p>



<p>The rest is called the <strong>registered claim names</strong>. The <code>iss</code> (issuer) claim identifies the principal that issued the JWT.</p>



<p>The <code>aud</code> (audience) claim identifies the recipients that the JWT is intended for. The <code>iat</code> (issued at) claim identifies the time at which the JWT was issued.</p>



<p>The <code>nbf</code> (not before) claim identifies the time before which the JWT MUST NOT be accepted for processing.</p>



<p>You can use another useful claim name called <code>exp</code> (expiration time) which identifies the expiration time on or after which the JWT MUST NOT be accepted for processing.</p>



<p>Including these claims are optional. Please read more about <a href="https://tools.ietf.org/html/rfc7519#section-4.1" target="_blank" rel="noopener noreferrer">registered claim names here</a>.</p>



<ul><li>Open the <code>api</code> folder. </li><li>Open the <code>config</code> folder. </li><li>Create a new file called <code>core.php</code>. </li><li>Place the following code.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">&lt;?php
// show error reporting
error_reporting(E_ALL);

// set your default time-zone
date_default_timezone_set(&#039;Asia/Manila&#039;);

// variables used for jwt
$key = &quot;example_key&quot;;
$issued_at = time();
$expiration_time = $issued_at + (60 * 60); // valid for 1 hour
$issuer = &quot;http://localhost/CodeOfaNinja/RestApiAuthLevel1/&quot;;
?&gt;
</pre></div>


<h3><span id="Download_PHP-JWT_from_GitHub">Download PHP-JWT from GitHub</span></h3>



<p>The files included in <code>login.php</code> file will not work without this library.</p>



<ul><li>Download the library from <a rel="noopener noreferrer" href="https://github.com/firebase/php-jwt" target="_blank">this link</a>.</li><li>Create <code>libs</code> folder. </li><li>Unzip the downloaded library there. </li><li>See the file structure above to see how it should look like.</li></ul>



<h3><span id="Output-2">Output</span></h3>



<ul><li>To <strong>test for successful login</strong>, enter the following as the request URL.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: plain; title: ; notranslate" title="">http://localhost/rest-api-authentication-example/api/login.php
</pre></div>


<ul><li>Enter the following on the body.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">{
 "email" : "<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="99f4f0f2fcd9faf6fdfcf6fff8f7f0f7f3f8b7faf6f4">[email&#160;protected]</a>",
 "password" : "555"
}
</pre></div>


<ul><li>We need to take note of the generated JWT because we will use it to access a resource later.</li></ul>



<figure class="wp-block-image"><img loading="lazy" width="1450" height="777" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/successful-login-1.jpg" alt="" class="wp-image-19299" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/successful-login-1.jpg 1450w, https://www.codeofaninja.com/wp-content/uploads/2018/09/successful-login-1-300x161.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/successful-login-1-768x412.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/successful-login-1-1030x552.jpg 1030w, https://www.codeofaninja.com/wp-content/uploads/2018/09/successful-login-1-705x378.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/successful-login-1-450x241.jpg 450w" sizes="(max-width: 1450px) 100vw, 1450px" /></figure>



<ul><li>To <strong>test for failed login</strong>, change the value of the password to <code>111</code> because it is the wrong password.<br></li></ul>



<figure class="wp-block-image"><img loading="lazy" width="1446" height="793" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/failed-login-1.jpg" alt="" class="wp-image-19301" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/failed-login-1.jpg 1446w, https://www.codeofaninja.com/wp-content/uploads/2018/09/failed-login-1-300x165.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/failed-login-1-768x421.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/failed-login-1-1030x565.jpg 1030w, https://www.codeofaninja.com/wp-content/uploads/2018/09/failed-login-1-705x387.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/failed-login-1-450x247.jpg 450w" sizes="(max-width: 1446px) 100vw, 1446px" /></figure>



<h2><span id="Create_API_for_JWT_validation">Create API for JWT validation</span></h2>



<h3><span id="Create_a_file_to_validate_JWT">Create a file to validate JWT</span></h3>



<p>This file will return output in JSON format and will accept requests from the specified URL. We&#8217;ll set the correct headers.</p>



<ul><li>Open <code>api</code> folder. </li><li>Create <code>validate_token.php</code> file. </li><li>Place the following code.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">&lt;?php
// required headers
header(&quot;Access-Control-Allow-Origin: http://localhost/rest-api-authentication-example/&quot;);
header(&quot;Content-Type: application/json; charset=UTF-8&quot;);
header(&quot;Access-Control-Allow-Methods: POST&quot;);
header(&quot;Access-Control-Max-Age: 3600&quot;);
header(&quot;Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With&quot;);

// files for decoding jwt will be here
</pre></div>


<h3><span id="Include_files_to_decode_JWT">Include files to decode JWT</span></h3>



<p>The code below shows the inclusion of the necessary files to decode the given JSON web token.</p>



<p>Replace <code>// files for decoding jwt will be here</code> comment of <code>validate_token.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// required to decode jwt
include_once 'config/core.php';
include_once 'libs/php-jwt-master/src/BeforeValidException.php';
include_once 'libs/php-jwt-master/src/ExpiredException.php';
include_once 'libs/php-jwt-master/src/SignatureInvalidException.php';
include_once 'libs/php-jwt-master/src/JWT.php';
use \Firebase\JWT\JWT;

// retrieve gieve jwt here
</pre></div>


<h3><span id="Retrieve_given_JWT">Retrieve given JWT</span></h3>



<p>The code below shows how to get the value of JSON web token.</p>



<p>Replace <code>// retrieve gieve jwt here</code> comment of <code>validate_token.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// get posted data
$data = json_decode(file_get_contents(&quot;php://input&quot;));

// get jwt
$jwt=isset($data-&gt;jwt) ? $data-&gt;jwt : &quot;&quot;;

// decode jwt here
</pre></div>


<h3><span id="Decode_JWT_if_it_exists">Decode JWT if it exists</span></h3>



<p>Check if a JWT is given. If true, decode it. Return a response code of 200, tell the user access is granted and some user information.</p>



<p>Replace <code>// decode jwt here</code> comment of <code>validate_token.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// if jwt is not empty
if($jwt){

    // if decode succeed, show user details
    try {
        // decode jwt
        $decoded = JWT::decode($jwt, $key, array(&#039;HS256&#039;));

        // set response code
        http_response_code(200);

        // show user details
        echo json_encode(array(
            &quot;message&quot; =&gt; &quot;Access granted.&quot;,
            &quot;data&quot; =&gt; $decoded-&gt;data
        ));

    }

    // catch will be here
}

// error if jwt is empty will be here
</pre></div>


<h3><span id="Show_error_if_decoding_failed">Show error if decoding failed</span></h3>



<p>If decoding JWT failed, it means access to the resource is denied. We need to return a response code of 401, tell the user access is denied and some information about the error.</p>



<p>Replace <code>// catch will be here</code> comment of <code>validate_token.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// if decode fails, it means jwt is invalid
catch (Exception $e){

    // set response code
    http_response_code(401);

    // tell the user access denied  &amp; show error message
    echo json_encode(array(
        &quot;message&quot; =&gt; &quot;Access denied.&quot;,
        &quot;error&quot; =&gt; $e-&gt;getMessage()
    ));
}
</pre></div>


<h3><span id="Show_error_message_if_JWT_is_empty">Show error message if JWT is empty</span></h3>



<p>If JWT is empty, it means access is also denied. We need to return a response code of 401 and tell the user access is denied.</p>



<p>Replace <code>// error if jwt is empty will be here</code> comment of <code>validate_token.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// show error message if jwt is empty
else{

    // set response code
    http_response_code(401);

    // tell the user access denied
    echo json_encode(array(&quot;message&quot; =&gt; &quot;Access denied.&quot;));
}
?&gt;
</pre></div>


<h3><span id="Output-3">Output</span></h3>



<ul><li>To <strong>test for successful access</strong>, enter the following request URL.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: plain; title: ; notranslate" title="">http://localhost/rest-api-authentication-example/api/validate_token.php
</pre></div>


<ul><li>Enter the JSON Web Token we retrieved earlier. The JSON web token below is different from yours. Make sure your JWT was generated in your machine.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">{
    "jwt": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9leGFtcGxlLm9yZyIsImF1ZCI6Imh0dHA6XC9cL2V4YW1wbGUuY29tIiwiaWF0IjoxMzU2OTk5NTI0LCJuYmYiOjEzNTcwMDAwMDAsImRhdGEiOnsiaWQiOiI5IiwiZmlyc3RuYW1lIjoiTWlrZSIsImxhc3RuYW1lIjoiRGFsaXNheSIsImVtYWlsIjoibWlrZUBjb2Rlb2ZhbmluamEuY29tIn19.h_Q4gJ3epcpwdwNCNCYxtiKdXsN34W9MEjxZ7sx21Vs"
}
</pre></div>


<ul><li>It should look like this on POSTMAN.</li></ul>



<figure class="wp-block-image"><img loading="lazy" width="1449" height="795" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/access-granted.jpg" alt="" class="wp-image-19321" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/access-granted.jpg 1449w, https://www.codeofaninja.com/wp-content/uploads/2018/09/access-granted-300x165.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/access-granted-768x421.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/access-granted-1030x565.jpg 1030w, https://www.codeofaninja.com/wp-content/uploads/2018/09/access-granted-705x387.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/access-granted-450x247.jpg 450w" sizes="(max-width: 1449px) 100vw, 1449px" /></figure>



<ul><li>To <strong>test for failed access</strong>, just put the word &#8220;EDITED&#8221; on your JWT. This will make JWT wrong. It will result in denied access. </li><li>It should look like the following.</li></ul>



<figure class="wp-block-image"><img loading="lazy" width="1449" height="707" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/access-denied.jpg" alt="" class="wp-image-19337" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/access-denied.jpg 1449w, https://www.codeofaninja.com/wp-content/uploads/2018/09/access-denied-300x146.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/access-denied-768x375.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/access-denied-1030x503.jpg 1030w, https://www.codeofaninja.com/wp-content/uploads/2018/09/access-denied-705x344.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/access-denied-450x220.jpg 450w" sizes="(max-width: 1449px) 100vw, 1449px" /></figure>



<h2><span id="Create_API_for_user_account">Create API for user account</span></h2>



<h3><span id="Create_a_file_for_updating_user_account">Create a file for updating user account</span></h3>



<p>This file will return output in JSON format and will accept requests from the specified URL. We&#8217;ll set the correct headers.</p>



<ul><li>Open <code>api</code> folder. </li><li>Create <code>update_user.php</code> file. </li><li>Place the following code.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">&lt;?php
// required headers
header(&quot;Access-Control-Allow-Origin: *&quot;);
header(&quot;Content-Type: application/json; charset=UTF-8&quot;);
header(&quot;Access-Control-Allow-Methods: POST&quot;);
header(&quot;Access-Control-Max-Age: 3600&quot;);
header(&quot;Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With&quot;);

// files for decoding jwt will be here
</pre></div>


<h3><span id="Include_files_to_decode_JWT-2">Include files to decode JWT</span></h3>



<p>The code below shows the inclusion of the necessary files to decode the given JSON web token.</p>



<p>Replace <code>// files for decoding jwt will be here</code> comment of <code>update_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// required to encode json web token
include_once 'config/core.php';
include_once 'libs/php-jwt-master/src/BeforeValidException.php';
include_once 'libs/php-jwt-master/src/ExpiredException.php';
include_once 'libs/php-jwt-master/src/SignatureInvalidException.php';
include_once 'libs/php-jwt-master/src/JWT.php';
use \Firebase\JWT\JWT;

// database connection will be here
</pre></div>


<h3><span id="Connect_to_database_and_user_table-3">Connect to database and user table</span></h3>



<p>We will need to update user information on the database. That&#8217;s why we need to get a database connection.</p>



<p>Replace <code>// database connection will be here</code> comment of <code>update_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// files needed to connect to database
include_once &#039;config/database.php&#039;;
include_once &#039;objects/user.php&#039;;

// get database connection
$database = new Database();
$db = $database-&gt;getConnection();

// instantiate user object
$user = new User($db);

// retrieve given jwt here
</pre></div>


<h3><span id="Retrieve_given_JWT-2">Retrieve given JWT</span></h3>



<p>The code below shows how to get the value of given JSON web token.</p>



<p>Replace <code>// retrieve given jwt here</code> comment of <code>update_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// get posted data
$data = json_decode(file_get_contents(&quot;php://input&quot;));

// get jwt
$jwt=isset($data-&gt;jwt) ? $data-&gt;jwt : &quot;&quot;;

// decode jwt here
</pre></div>


<h3><span id="Decode_JWT_if_it_exists-2">Decode JWT if it exists</span></h3>



<p>Check if a JWT is given. If true, decode it inside a <code>try</code> block.</p>



<p>Replace <code>// decode jwt here</code> comment of <code>update_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// if jwt is not empty
if($jwt){

    // if decode succeed, show user details
    try {

        // decode jwt
        $decoded = JWT::decode($jwt, $key, array('HS256'));

        // set user property values here
    }

    // catch failed decoding will be here
}

// error message if jwt is empty will be here
</pre></div>


<h3><span id="Show_error_message_if_decoding_fails">Show error message if decoding fails</span></h3>



<p>If decoding JWT fails, we need to set a response code of 401, tell the user access is denied and show information about the error.</p>



<p>Replace <code>// catch failed decoding will be here</code> comment of <code>update_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// if decode fails, it means jwt is invalid
catch (Exception $e){

    // set response code
    http_response_code(401);

    // show error message
    echo json_encode(array(
        &quot;message&quot; =&gt; &quot;Access denied.&quot;,
        &quot;error&quot; =&gt; $e-&gt;getMessage()
    ));
}
</pre></div>


<h3><span id="Set_user_property_values">Set user property values</span></h3>



<p>We need to set the submitted data (through the HTML form) to the <code>user</code> object properties.</p>



<p>Replace <code>// set user property values here</code> comment of <code>update_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// set user property values
$user-&gt;firstname = $data-&gt;firstname;
$user-&gt;lastname = $data-&gt;lastname;
$user-&gt;email = $data-&gt;email;
$user-&gt;password = $data-&gt;password;
$user-&gt;id = $decoded-&gt;data-&gt;id;

// update user will be here
</pre></div>


<h3><span id="Use_the_update_method">Use the update() method</span></h3>



<p>One the code below, we use the user object&#8217;s <code>create()</code> method. If it returns <code>true</code>, it means the user was updated. If it returns <code>false</code>, the system is unable to update the user information.</p>



<p>Replace <code>// update user will be here</code> comment of <code>update_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// update the user record
if($user-&gt;update()){
    // regenerate jwt will be here
}

// message if unable to update user
else{
    // set response code
    http_response_code(401);

    // show error message
    echo json_encode(array(&quot;message&quot; =&gt; &quot;Unable to update user.&quot;));
}
</pre></div>


<h3><span id="Add_update_method_in_user_class">Add update() method in user class</span></h3>



<p>The code below shows the <code>UPDATE</code> query, data sanitation, and binding.</p>



<p>If a password was typed in the HTML form, we use the built-in <code>password_hash()</code> method to secure the user&#8217;s password on the database.</p>



<p>If the execution is a success, the user information will be updated on the database.</p>



<p>Replace the <code>// update() method will be here</code> comment of <code>api/objects/user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// update a user record
public function update(){

	// if password needs to be updated
	$password_set=!empty($this-&gt;password) ? &quot;, password = :password&quot; : &quot;&quot;;

	// if no posted password, do not update the password
	$query = &quot;UPDATE &quot; . $this-&gt;table_name . &quot;
			SET
				firstname = :firstname,
				lastname = :lastname,
				email = :email
				{$password_set}
			WHERE id = :id&quot;;

	// prepare the query
	$stmt = $this-&gt;conn-&gt;prepare($query);

	// sanitize
	$this-&gt;firstname=htmlspecialchars(strip_tags($this-&gt;firstname));
	$this-&gt;lastname=htmlspecialchars(strip_tags($this-&gt;lastname));
	$this-&gt;email=htmlspecialchars(strip_tags($this-&gt;email));

	// bind the values from the form
	$stmt-&gt;bindParam(&#039;:firstname&#039;, $this-&gt;firstname);
	$stmt-&gt;bindParam(&#039;:lastname&#039;, $this-&gt;lastname);
	$stmt-&gt;bindParam(&#039;:email&#039;, $this-&gt;email);

	// hash the password before saving to database
	if(!empty($this-&gt;password)){
		$this-&gt;password=htmlspecialchars(strip_tags($this-&gt;password));
		$password_hash = password_hash($this-&gt;password, PASSWORD_BCRYPT);
		$stmt-&gt;bindParam(&#039;:password&#039;, $password_hash);
	}

	// unique ID of record to be edited
	$stmt-&gt;bindParam(&#039;:id&#039;, $this-&gt;id);

	// execute the query
	if($stmt-&gt;execute()){
		return true;
	}

	return false;
}
</pre></div>


<h3><span id="Re-generate_JWT">Re-generate JWT</span></h3>



<p>We need to re-generate or get a new JSON Web Token especially if user information was changed. The code below does that and it sets a response code of 200 and tells the user that the information was updated.</p>



<p>Replace the <code>// regenerate jwt will be here</code> comment of <code>update_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// we need to re-generate jwt because user details might be different
$token = array(
   &quot;iat&quot; =&gt; $issued_at,
   &quot;exp&quot; =&gt; $expiration_time,
   &quot;iss&quot; =&gt; $issuer,
   &quot;data&quot; =&gt; array(
       &quot;id&quot; =&gt; $user-&gt;id,
       &quot;firstname&quot; =&gt; $user-&gt;firstname,
       &quot;lastname&quot; =&gt; $user-&gt;lastname,
       &quot;email&quot; =&gt; $user-&gt;email
   )
);
$jwt = JWT::encode($token, $key);

// set response code
http_response_code(200);

// response in json format
echo json_encode(
        array(
            &quot;message&quot; =&gt; &quot;User was updated.&quot;,
            &quot;jwt&quot; =&gt; $jwt
        )
    );
</pre></div>


<h3><span id="Show_error_message_if_JWT_is_empty-2">Show error message if JWT is empty</span></h3>



<p>We need to tell the user that access is denied if JWT does not exist. We set a response code of 401 as well.</p>



<p>Replace the <code>// error message if JWT is empty will be here</code> comment of <code>update_user.php</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: php; title: ; notranslate" title="">// show error message if jwt is empty
else{

    // set response code
    http_response_code(401);

    // tell the user access denied
    echo json_encode(array(&quot;message&quot; =&gt; &quot;Access denied.&quot;));
}
?&gt;
</pre></div>


<h3><span id="Output-4">Output</span></h3>



<ul><li>To <strong>test for successful user update</strong>, enter the following as request URL on POSTMAN.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: plain; title: ; notranslate" title="">http://localhost/rest-api-authentication-example/api/update_user.php
</pre></div>


<ul><li>On the body section, enter new user information with the JSON Web Token we retrieved earlier.</li></ul>



<ul><li>The JSON web token below is different from yours. Make sure your JWT was generated in your machine.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">{
    "firstname" : "Mike",
    "lastname" : "Dalisay",
    "email" : "<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="6a0703010f2a09050e0f050c0b040304000b44090507">[email&#160;protected]</a>",
    "password" : "555",
    "jwt": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9leGFtcGxlLm9yZyIsImF1ZCI6Imh0dHA6XC9cL2V4YW1wbGUuY29tIiwiaWF0IjoxMzU2OTk5NTI0LCJuYmYiOjEzNTcwMDAwMDAsImRhdGEiOnsiaWQiOiI5IiwiZmlyc3RuYW1lIjoiVmluY2UiLCJsYXN0bmFtZSI6IkRhbGlzYXkiLCJlbWFpbCI6Im1pa2VAY29kZW9mYW5pbmphLmNvbSJ9fQ.3Sv65TVYACkNPo4HMr4NvreyZY16wxG-nSorLi_jykI"
}
</pre></div>


<ul><li>It should look like this on POSTMAN.</li></ul>



<figure class="wp-block-image"><img loading="lazy" width="1448" height="763" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-updated.jpg" alt="" class="wp-image-19384" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-updated.jpg 1448w, https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-updated-300x158.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-updated-768x405.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-updated-1030x543.jpg 1030w, https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-updated-710x375.jpg 710w, https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-updated-705x371.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/user-was-updated-450x237.jpg 450w" sizes="(max-width: 1448px) 100vw, 1448px" /></figure>



<ul><li>As you can see in the image above, it generates a new JWT and it will be stored in the client application. We can use the new information on the app interface later.</li></ul>



<ul><li>To <strong>test for failed user update</strong>, you can just add the word <code>EDITED</code> on the submitted JWT or just remove the JWT. It should look like the following.</li></ul>



<figure class="wp-block-image"><a href="https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-update-user-access-denied.jpg"><img loading="lazy" width="1446" height="791" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-update-user-access-denied.jpg" alt="" class="wp-image-19386" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-update-user-access-denied.jpg 1446w, https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-update-user-access-denied-300x164.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-update-user-access-denied-768x420.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-update-user-access-denied-1030x563.jpg 1030w, https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-update-user-access-denied-705x386.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/unable-to-update-user-access-denied-450x246.jpg 450w" sizes="(max-width: 1446px) 100vw, 1446px" /></a></figure>



<h2><span id="Create_interface_for_user_registration">Create interface for user registration</span></h2>



<h3><span id="91_Create_index_page">9.1 Create index page</span></h3>



<p>We will use the APIs we created earlier on a simple Single-Page Application (SPA) created using HTML, CSS and JavaScript.</p>



<p>All of the essential codes will be in this single <code>index.html</code> file.</p>



<ul><li>Open <code>rest-api-authentication-example</code> folder. </li><li>Create <code>index.html</code> file. </li><li>Place the following code.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: xml; title: ; notranslate" title="">&lt;!doctype html&gt;
&lt;html lang=&quot;en&quot;&gt;
    &lt;head&gt;
        &lt;!-- Required meta tags --&gt;
        &lt;meta charset=&quot;utf-8&quot; /&gt;
        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot; /&gt;

        &lt;title&gt;Rest API Authentication Example&lt;/title&gt;

        &lt;!-- CSS links will be here --&gt;

    &lt;/head&gt;
&lt;body&gt;

&lt;!-- navigation bar will be here --&gt;

&lt;!-- script links will be here --&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre></div>


<h3><span id="Add_navigation_bar">Add navigation bar</span></h3>



<p>The navigation bar is where the menus like home page, account page, login page, logout and sign up page can be clicked or triggered.</p>



<p>Replace the <code>&lt;!-- navigation bar will be here --&gt;</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: xml; title: ; notranslate" title="">&lt;!-- navbar --&gt;
&lt;nav class=&quot;navbar navbar-expand-md navbar-dark bg-dark fixed-top&quot;&gt;
    &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Navbar&lt;/a&gt;
    &lt;button class=&quot;navbar-toggler&quot; type=&quot;button&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbarNavAltMarkup&quot; aria-controls=&quot;navbarNavAltMarkup&quot; aria-expanded=&quot;false&quot; aria-label=&quot;Toggle navigation&quot;&gt;
        &lt;span class=&quot;navbar-toggler-icon&quot;&gt;&lt;/span&gt;
    &lt;/button&gt;
    &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;navbarNavAltMarkup&quot;&gt;
        &lt;div class=&quot;navbar-nav&quot;&gt;
            &lt;a class=&quot;nav-item nav-link&quot; href=&quot;#&quot; id=&#039;home&#039;&gt;Home&lt;/a&gt;
            &lt;a class=&quot;nav-item nav-link&quot; href=&quot;#&quot; id=&#039;update_account&#039;&gt;Account&lt;/a&gt;
            &lt;a class=&quot;nav-item nav-link&quot; href=&quot;#&quot; id=&#039;logout&#039;&gt;Logout&lt;/a&gt;
            &lt;a class=&quot;nav-item nav-link&quot; href=&quot;#&quot; id=&#039;login&#039;&gt;Login&lt;/a&gt;
            &lt;a class=&quot;nav-item nav-link&quot; href=&quot;#&quot; id=&#039;sign_up&#039;&gt;Sign Up&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/nav&gt;
&lt;!-- /navbar --&gt;

&lt;!-- content section will be here --&gt;
</pre></div>


<h3><span id="Add_content_section">Add content section</span></h3>



<p>The content section is where the contents like HTML forms and message prompts will be rendered.</p>



<p>Replace the <code>&lt;!-- content section will be here --&gt;</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: xml; title: ; notranslate" title="">&lt;!-- container --&gt;
&lt;main role=&quot;main&quot; class=&quot;container starter-template&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;div class=&quot;col&quot;&gt;

			&lt;!-- where prompt / messages will appear --&gt;
			&lt;div id=&quot;response&quot;&gt;&lt;/div&gt;

			&lt;!-- where main content will appear --&gt;
			&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;
		&lt;/div&gt;
	&lt;/div&gt;

&lt;/main&gt;
&lt;!-- /container --&gt;
</pre></div>


<h3><span id="Add_Bootstrap_4_and_custom_CSS_links">Add Bootstrap 4 and custom CSS links</span></h3>



<p>We are using <a href="https://getbootstrap.com/" target="_blank" rel="noopener noreferrer">Bootstrap 4</a> to make the user interface look good. We will use the CDN link so that we won&#8217;t have to download the whole library.</p>



<p>We will see the use of custom CSS file on the next section.</p>



<p>Replace the <code>&lt;!-- CSS links will be here --&gt;</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: xml; title: ; notranslate" title="">&lt;!-- Bootstrap 4 CSS and custom CSS --&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css&quot; integrity=&quot;sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm&quot; crossorigin=&quot;anonymous&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;custom.css&quot; /&gt;
</pre></div>


<h3><span id="Create_custom_CSS_file">Create custom CSS file</span></h3>



<p>We use the custom CSS for any look &#038; feel customization we want to implement.</p>



<ul><li>Open <code>rest-api-authentication-example</code> folder. </li><li>Create <code>custom.css</code> file. </li><li>Place the following code.</li></ul>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: css; title: ; notranslate" title="">body { padding-top: 5rem; }
.starter-template { padding: 3rem 1.5rem; }
#logout{ display:none; }
</pre></div>


<h3><span id="Add_jQuery_and_Bootstrap_4_script_links">Add jQuery and Bootstrap 4 script links</span></h3>



<p>In this tutorial, we use the jQuery library to render the interface and make HTTP requests.</p>



<p>To make Bootstrap 4 work, we need to include its own JavaScript as well.</p>



<p>Replace the <code>&lt;!-- script links will be here --&gt;</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: xml; title: ; notranslate" title="">&lt;!-- jQuery &amp; Bootstrap 4 JavaScript libraries --&gt;
&lt;script src=&quot;https://code.jquery.com/jquery-3.2.1.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js&quot; integrity=&quot;sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js&quot; integrity=&quot;sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;

&lt;!-- jquery scripts will be here --&gt;
</pre></div>


<h3><span id="Show_a_sign_up_HTML_form">Show a sign up HTML form</span></h3>



<p>When you click the Sign Up menu on the navigation bar, it will show a sign up or registration form.</p>



<p>The code below shows the <code>click</code> trigger and the HTML form.</p>



<p>Replace the <code>&lt;!-- jquery scripts will be here --&gt;</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">&lt;script&gt;
// jQuery codes
$(document).ready(function(){
    // show sign up / registration form
    $(document).on(&#039;click&#039;, &#039;#sign_up&#039;, function(){

        var html = `
            &lt;h2&gt;Sign Up&lt;/h2&gt;
            &lt;form id=&#039;sign_up_form&#039;&gt;
            	&lt;div class=&quot;form-group&quot;&gt;
            		&lt;label for=&quot;firstname&quot;&gt;Firstname&lt;/label&gt;
            		&lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;firstname&quot; id=&quot;firstname&quot; required /&gt;
            	&lt;/div&gt;

            	&lt;div class=&quot;form-group&quot;&gt;
            		&lt;label for=&quot;lastname&quot;&gt;Lastname&lt;/label&gt;
            		&lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;lastname&quot; id=&quot;lastname&quot; required /&gt;
            	&lt;/div&gt;

            	&lt;div class=&quot;form-group&quot;&gt;
            		&lt;label for=&quot;email&quot;&gt;Email&lt;/label&gt;
            		&lt;input type=&quot;email&quot; class=&quot;form-control&quot; name=&quot;email&quot; id=&quot;email&quot; required /&gt;
            	&lt;/div&gt;

            	&lt;div class=&quot;form-group&quot;&gt;
            		&lt;label for=&quot;password&quot;&gt;Password&lt;/label&gt;
            		&lt;input type=&quot;password&quot; class=&quot;form-control&quot; name=&quot;password&quot; id=&quot;password&quot; required /&gt;
            	&lt;/div&gt;

                &lt;button type=&#039;submit&#039; class=&#039;btn btn-primary&#039;&gt;Sign Up&lt;/button&gt;
            &lt;/form&gt;
            `;

        clearResponse();
        $(&#039;#content&#039;).html(html);
    });

    // trigger when registration form is submitted here

    // show login form trigger will be here

    // clearResponse() will be here
});
&lt;/script&gt;
</pre></div>


<h3><span id="Trigger_when_sign_up_form_is_submitted">Trigger when sign up form is submitted</span></h3>



<p>We need to process the form data when it is submitted.</p>



<p>Replace the <code>trigger when the registration form is submitted here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// trigger when registration form is submitted
$(document).on(&#039;submit&#039;, &#039;#sign_up_form&#039;, function(){

	// get form data
	var sign_up_form=$(this);
	var form_data=JSON.stringify(sign_up_form.serializeObject());

	// submit form data to api
	$.ajax({
		url: &quot;api/create_user.php&quot;,
		type : &quot;POST&quot;,
		contentType : &#039;application/json&#039;,
		data : form_data,
		success : function(result) {
			// if response is a success, tell the user it was a successful sign up &amp; empty the input boxes
			$(&#039;#response&#039;).html(&quot;&lt;div class=&#039;alert alert-success&#039;&gt;Successful sign up. Please login.&lt;/div&gt;&quot;);
			sign_up_form.find(&#039;input&#039;).val(&#039;&#039;);
		},
		error: function(xhr, resp, text){
			// on error, tell the user sign up failed
			$(&#039;#response&#039;).html(&quot;&lt;div class=&#039;alert alert-danger&#039;&gt;Unable to sign up. Please contact admin.&lt;/div&gt;&quot;);
		}
	});

	return false;
});
</pre></div>


<h3><span id="Remove_any_prompt_messages">Remove any prompt messages</span></h3>



<p>The <code>clearResponse()</code> method was used in the previous section. Its only purpose is to remove any prompt messages that may have been displayed on the screen.</p>



<p>Replace the <code>// clearResponse() will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// remove any prompt messages
function clearResponse(){
    $('#response').html('');
}

// showLoginPage() will be here

// serializeObject will be here
</pre></div>


<h3><span id="Add_serializeObject_function">Add serializeObject function</span></h3>



<p>The serializeObject function will convert form data to JSON format. We need this function to send values from an HTML form to the API.</p>



<p>Replace the <code>// serializeObject will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// function to make form values to json format
$.fn.serializeObject = function(){

	var o = {};
	var a = this.serializeArray();
	$.each(a, function() {
		if (o&#091;this.name] !== undefined) {
			if (!o&#091;this.name].push) {
				o&#091;this.name] = &#091;o&#091;this.name]];
			}
			o&#091;this.name].push(this.value || '');
		} else {
			o&#091;this.name] = this.value || '';
		}
	});
	return o;
};
</pre></div>


<h3><span id="Output-5">Output</span></h3>



<p>When the user clicks the <code>Sign-Up</code> link on the navigation bar.</p>



<figure class="wp-block-image"><a href="https://www.codeofaninja.com/wp-content/uploads/2018/09/3-sign-up.jpg"><img loading="lazy" width="1020" height="707" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/3-sign-up.jpg" alt="" class="wp-image-19425" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/3-sign-up.jpg 1020w, https://www.codeofaninja.com/wp-content/uploads/2018/09/3-sign-up-300x208.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/3-sign-up-768x532.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/3-sign-up-705x489.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/3-sign-up-450x312.jpg 450w" sizes="(max-width: 1020px) 100vw, 1020px" /></a></figure>



<p>After the user filled out and submitted the form.</p>



<figure class="wp-block-image"><a href="https://www.codeofaninja.com/wp-content/uploads/2018/09/4-successful-sign-up.jpg"><img loading="lazy" width="1020" height="769" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/4-successful-sign-up.jpg" alt="" class="wp-image-19426" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/4-successful-sign-up.jpg 1020w, https://www.codeofaninja.com/wp-content/uploads/2018/09/4-successful-sign-up-300x226.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/4-successful-sign-up-768x579.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/4-successful-sign-up-705x532.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/4-successful-sign-up-450x339.jpg 450w" sizes="(max-width: 1020px) 100vw, 1020px" /></a></figure>



<h2><span id="Create_a_login_page">Create a login page</span></h2>



<h3><span id="101_Trigger_when_login_menu_was_clicked">10.1 Trigger when login menu was clicked</span></h3>



<p>When you click the <code>Login</code> menu on the navigation bar, it will show a login form. </p>



<p>The code below shows the <code>click</code> trigger and <code>showLoginPage();</code> function to show a login form.</p>



<p>Replace the <code>// show login form trigger will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// show login form
$(document).on('click', '#login', function(){
    showLoginPage();
});

// login form submit trigger will be here
</pre></div>


<h3><span id="Show_login_HTML_form">Show login HTML form</span></h3>



<p>The function below shows the HTML form for users to login.</p>



<p>Replace the <code>// showLoginPage() will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// show login page
function showLoginPage(){

    // remove jwt
    setCookie(&quot;jwt&quot;, &quot;&quot;, 1);

    // login page html
    var html = `
        &lt;h2&gt;Login&lt;/h2&gt;
        &lt;form id=&#039;login_form&#039;&gt;
            &lt;div class=&#039;form-group&#039;&gt;
                &lt;label for=&#039;email&#039;&gt;Email address&lt;/label&gt;
                &lt;input type=&#039;email&#039; class=&#039;form-control&#039; id=&#039;email&#039; name=&#039;email&#039; placeholder=&#039;Enter email&#039;&gt;
            &lt;/div&gt;

            &lt;div class=&#039;form-group&#039;&gt;
                &lt;label for=&#039;password&#039;&gt;Password&lt;/label&gt;
                &lt;input type=&#039;password&#039; class=&#039;form-control&#039; id=&#039;password&#039; name=&#039;password&#039; placeholder=&#039;Password&#039;&gt;
            &lt;/div&gt;

            &lt;button type=&#039;submit&#039; class=&#039;btn btn-primary&#039;&gt;Login&lt;/button&gt;
        &lt;/form&gt;
        `;

    $(&#039;#content&#039;).html(html);
    clearResponse();
    showLoggedOutMenu();
}

// setCookie() will be here 

// showLoggedOutMenu() will be here
</pre></div>


<h3><span id="Add_setCookie_function">Add setCookie() function</span></h3>



<p>The <code>setCookie()</code> function will help us store JWT on the cookie.</p>



<p>Replace the <code>// setCookie() will be here </code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// function to set cookie
function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays*24*60*60*1000));
    var expires = "expires="+ d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}
</pre></div>


<h3><span id="Change_menu_appearance">Change menu appearance</span></h3>



<p>The <code>showLoggedOutMenu()</code> function was used in the previous section.</p>



<p>This function will make the menu look like the options for a logged-out user.</p>



<p>Replace the <code>// showLoggedOutMenu() will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// if the user is logged out
function showLoggedOutMenu(){
    // show login and sign up from navbar & hide logout button
    $("#login, #sign_up").show();
    $("#logout").hide();
}

// showHomePage() function will be here
</pre></div>


<h3><span id="Output-6">Output</span></h3>



<ul><li>If the user clicks the <code>Login</code> menu on the navigation bar.</li></ul>



<figure class="wp-block-image"><a href="https://www.codeofaninja.com/wp-content/uploads/2018/09/5-login.jpg"><img loading="lazy" width="1021" height="566" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/5-login.jpg" alt="" class="wp-image-19427" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/5-login.jpg 1021w, https://www.codeofaninja.com/wp-content/uploads/2018/09/5-login-300x166.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/5-login-768x426.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/5-login-705x391.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/5-login-450x249.jpg 450w" sizes="(max-width: 1021px) 100vw, 1021px" /></a></figure>



<h2><span id="Show_login_responses">Show login responses</span></h2>



<h3><span id="Submitted_form_trigger">Submitted form trigger</span></h3>



<p>The code below shows a <code>submit</code> trigger for the login form.</p>



<p>It gets the data from the form and stores it in the <code>form_data</code> variable.</p>



<p>Replace the <code>// login form submit trigger will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// trigger when login form is submitted
$(document).on('submit', '#login_form', function(){

    // get form data
    var login_form=$(this);
    var form_data=JSON.stringify(login_form.serializeObject());

    // http request will be here

    return false;
});

// trigger to show home page will be here
</pre></div>


<h3><span id="Create_an_HTTP_request">Create an HTTP request</span></h3>



<p>The code below shows how we make an HTTP request, specifically an AJAX request to verify if the submitted email and password are valid.</p>



<p>If it is valid, we will save the JWT to <code>localStorage</code>, show the home page and tell the user it was a successful login.</p>



<p>Replace the <code>// http request will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// submit form data to api
$.ajax({
    url: &quot;api/login.php&quot;,
    type : &quot;POST&quot;,
    contentType : &#039;application/json&#039;,
    data : form_data,
    success : function(result){

        // store jwt to cookie
        setCookie(&quot;jwt&quot;, result.jwt, 1);

        // show home page &amp; tell the user it was a successful login
        showHomePage();
        $(&#039;#response&#039;).html(&quot;&lt;div class=&#039;alert alert-success&#039;&gt;Successful login.&lt;/div&gt;&quot;);

    },
    // error response will be here
});
</pre></div>


<h3><span id="Show_home_page_HTML">Show home page HTML</span></h3>



<p>On the <code>showHomePage()</code> function, we need to validate the stored JWT before showing the home page HTML.</p>



<p>Replace the <code>// showHomePage() function will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// show home page
function showHomePage(){

    // validate jwt to verify access
    var jwt = getCookie('jwt');
    $.post("api/validate_token.php", JSON.stringify({ jwt:jwt })).done(function(result) {

        // home page html will be here
    })

    // show login page on error will be here
}

// getCookie() will be here

// showLoggedInMenu() will be here
</pre></div>


<h3><span id="Add_home_page_HTML">Add home page HTML</span></h3>



<p>If JWT is valid, we show the home page HTML and call the <code>showLoggedInMenu()</code> function.</p>



<p>Replace the <code>// home page html will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// if valid, show homepage
var html = `
    &lt;div class=&quot;card&quot;&gt;
        &lt;div class=&quot;card-header&quot;&gt;Welcome to Home!&lt;/div&gt;
        &lt;div class=&quot;card-body&quot;&gt;
            &lt;h5 class=&quot;card-title&quot;&gt;You are logged in.&lt;/h5&gt;
            &lt;p class=&quot;card-text&quot;&gt;You won&#039;t be able to access the home and account pages if you are not logged in.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    `;

$(&#039;#content&#039;).html(html);
showLoggedInMenu();
</pre></div>


<h3><span id="Add_getCookie_function">Add getCookie() function</span></h3>



<p>The <code>getCookie()</code> function will help us read the JWT we stored earlier.</p>



<p>Replace the <code>// getCookie() will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// get or read cookie
function getCookie(cname){
    var name = cname + &quot;=&quot;;
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(&#039;;&#039;);
    for(var i = 0; i &lt;ca.length; i++) {
        var c = ca&#091;i];
        while (c.charAt(0) == &#039; &#039;){
            c = c.substring(1);
        }

        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return &quot;&quot;;
}
</pre></div>


<h3><span id="Show_error_for_invalid_login">Show error for invalid login</span></h3>



<p>If the submitted email and password are invalid, we tell the user login failed and empty the login form.</p>



<p>Replace the <code>// error response will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">error: function(xhr, resp, text){
    // on error, tell the user login has failed &amp; empty the input boxes
    $(&#039;#response&#039;).html(&quot;&lt;div class=&#039;alert alert-danger&#039;&gt;Login failed. Email or password is incorrect.&lt;/div&gt;&quot;);
    login_form.find(&#039;input&#039;).val(&#039;&#039;);
}
</pre></div>


<h3><span id="Output-7">Output</span></h3>



<ul><li>If the user entered a valid email and password.</li></ul>



<figure class="wp-block-image"><a href="https://www.codeofaninja.com/wp-content/uploads/2018/09/6-successful-login-screen.jpg"><img loading="lazy" width="983" height="534" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/6-successful-login-screen.jpg" alt="" class="wp-image-19428" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/6-successful-login-screen.jpg 983w, https://www.codeofaninja.com/wp-content/uploads/2018/09/6-successful-login-screen-300x163.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/6-successful-login-screen-768x417.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/6-successful-login-screen-705x383.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/6-successful-login-screen-450x244.jpg 450w" sizes="(max-width: 983px) 100vw, 983px" /></a></figure>



<ul><li>If the user entered an invalid email or password.</li></ul>



<figure class="wp-block-image"><a href="https://www.codeofaninja.com/wp-content/uploads/2018/09/7-failed-login-screen.jpg"><img loading="lazy" width="1021" height="634" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/7-failed-login-screen.jpg" alt="" class="wp-image-19440" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/7-failed-login-screen.jpg 1021w, https://www.codeofaninja.com/wp-content/uploads/2018/09/7-failed-login-screen-300x186.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/7-failed-login-screen-768x477.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/7-failed-login-screen-705x438.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/7-failed-login-screen-450x279.jpg 450w" sizes="(max-width: 1021px) 100vw, 1021px" /></a></figure>



<h2><span id="On_click_of_Home_menu">On click of Home menu</span></h2>



<h3><span id="Add_trigger_to_show_home_page">Add trigger to show home page</span></h3>



<p>The code below shows a <code>click</code> trigger with <code>showHomePage();</code> function.</p>



<p>Replace the <code>// trigger to show home page will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// show home page
$(document).on('click', '#home', function(){
    showHomePage();
    clearResponse();
});

// trigger to show account form will be here 
</pre></div>


<h3><span id="Set_logged-in_menu">Set logged-in menu</span></h3>



<p>The <code>showLoggedInMenu()</code> function will change the menu options to look like a menu for a logged-in user.</p>



<p>Replace the <code>showLoggedInMenu() will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// if the user is logged in
function showLoggedInMenu(){
    // hide login and sign up from navbar & show logout button
    $("#login, #sign_up").hide();
    $("#logout").show();
}

// showUpdateAccountForm() will be here
</pre></div>


<h3><span id="Show_login_page_if_JWT_is_invalid">Show login page if JWT is invalid</span></h3>



<p>If JWT is invalid, we will show the login page and ask the user to login.</p>



<p>Replace the <code>// show login page on error will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// show login page on error
.fail(function(result){
    showLoginPage();
    $(&#039;#response&#039;).html(&quot;&lt;div class=&#039;alert alert-danger&#039;&gt;Please login to access the home page.&lt;/div&gt;&quot;);
});
</pre></div>


<h3><span id="Output-8">Output</span></h3>



<ul><li>If a logged-out user clicked the <code>Home</code> menu on the navigation bar.</li></ul>



<figure class="wp-block-image"><a href="https://www.codeofaninja.com/wp-content/uploads/2018/09/1-home-page-not-logged-in.jpg"><img loading="lazy" width="1022" height="627" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/1-home-page-not-logged-in.jpg" alt="" class="wp-image-19423" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/1-home-page-not-logged-in.jpg 1022w, https://www.codeofaninja.com/wp-content/uploads/2018/09/1-home-page-not-logged-in-300x184.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/1-home-page-not-logged-in-768x471.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/1-home-page-not-logged-in-705x433.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/1-home-page-not-logged-in-450x276.jpg 450w" sizes="(max-width: 1022px) 100vw, 1022px" /></a></figure>



<ul><li>If a logged-in user clicked the <code>Home</code> menu on the navigation bar.</li></ul>



<figure class="wp-block-image"><a href="https://www.codeofaninja.com/wp-content/uploads/2018/09/7-home-page-logged-in.jpg"><img loading="lazy" width="1020" height="584" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/7-home-page-logged-in.jpg" alt="" class="wp-image-19429" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/7-home-page-logged-in.jpg 1020w, https://www.codeofaninja.com/wp-content/uploads/2018/09/7-home-page-logged-in-300x172.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/7-home-page-logged-in-768x440.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/7-home-page-logged-in-705x404.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/7-home-page-logged-in-450x258.jpg 450w" sizes="(max-width: 1020px) 100vw, 1020px" /></a></figure>



<h2><span id="Show_user_account_page">Show user account page</span></h2>



<h3><span id="Add_trigger_to_show_account_form">Add trigger to show account form</span></h3>



<p>The code below shows a <code>click</code> trigger with <code>showUpdateAccountForm();</code> function.</p>



<p>Replace the <code>// trigger to show account form will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// show update account form
$(document).on('click', '#update_account', function(){
    showUpdateAccountForm();
});

// trigger for updating user account will be here
</pre></div>


<h3><span id="Verify_if_JWT_is_valid">Verify if JWT is valid</span></h3>



<p>We need the <code>showUpdateAccountForm()</code> function to render to HTML form for updating a user account.</p>



<p>First, we need to verify if JWT is valid. We use the <code>getCookie('jwt');</code> function to get the JWT and send it to <code>validate_token.php</code> via jQuery <code>$.post</code> method.</p>



<p>Replace the <code>// showUpdateAccountForm() will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">function showUpdateAccountForm(){
    // validate jwt to verify access
    var jwt = getCookie('jwt');
    $.post("api/validate_token.php", JSON.stringify({ jwt:jwt })).done(function(result) {

        // html form for updating user account will be here
    })

    // error message when jwt is invalid will be here
}
</pre></div>


<h3><span id="Show_account_form_if_JWT_is_valid">Show account form if JWT is valid</span></h3>



<p>If JWT is valid, we will show the HTML form using the code below.</p>



<p>Replace the <code>// html form for updating user account will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// if response is valid, put user details in the form
var html = `
        &lt;h2&gt;Update Account&lt;/h2&gt;
        &lt;form id=&#039;update_account_form&#039;&gt;
            &lt;div class=&quot;form-group&quot;&gt;
                &lt;label for=&quot;firstname&quot;&gt;Firstname&lt;/label&gt;
                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;firstname&quot; id=&quot;firstname&quot; required value=&quot;` + result.data.firstname + `&quot; /&gt;
            &lt;/div&gt;

            &lt;div class=&quot;form-group&quot;&gt;
                &lt;label for=&quot;lastname&quot;&gt;Lastname&lt;/label&gt;
                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;lastname&quot; id=&quot;lastname&quot; required value=&quot;` + result.data.lastname + `&quot; /&gt;
            &lt;/div&gt;

            &lt;div class=&quot;form-group&quot;&gt;
                &lt;label for=&quot;email&quot;&gt;Email&lt;/label&gt;
                &lt;input type=&quot;email&quot; class=&quot;form-control&quot; name=&quot;email&quot; id=&quot;email&quot; required value=&quot;` + result.data.email + `&quot; /&gt;
            &lt;/div&gt;

            &lt;div class=&quot;form-group&quot;&gt;
                &lt;label for=&quot;password&quot;&gt;Password&lt;/label&gt;
                &lt;input type=&quot;password&quot; class=&quot;form-control&quot; name=&quot;password&quot; id=&quot;password&quot; /&gt;
            &lt;/div&gt;

            &lt;button type=&#039;submit&#039; class=&#039;btn btn-primary&#039;&gt;
                Save Changes
            &lt;/button&gt;
        &lt;/form&gt;
    `;

clearResponse();
$(&#039;#content&#039;).html(html);
</pre></div>


<h3><span id="Show_login_page_if_JWT_is_invalid-2">Show login page if JWT is invalid</span></h3>



<p>If JWT is invalid, we will logout the user and ask him to login.</p>



<p>Replace the <code>// error message when jwt is invalid will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// on error/fail, tell the user he needs to login to show the account page
.fail(function(result){
    showLoginPage();
    $(&#039;#response&#039;).html(&quot;&lt;div class=&#039;alert alert-danger&#039;&gt;Please login to access the account page.&lt;/div&gt;&quot;);
});
</pre></div>


<h3><span id="Add_a_trigger_for_updating_a_user_account">Add a trigger for updating a user account</span></h3>



<p>If the submit button was clicked, we will use the code below to catch that trigger.</p>



<p>We will get the form handle and JWT as well.</p>



<p>Replace the <code>// trigger for updating user account will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// trigger when 'update account' form is submitted
$(document).on('submit', '#update_account_form', function(){

    // handle for update_account_form
    var update_account_form=$(this);

    // validate jwt to verify access
    var jwt = getCookie('jwt');

    // get form data and jwt here

    return false;
});

// trigger to logout will be here
</pre></div>


<h3><span id="Get_form_data_and_JWT">Get form data and JWT</span></h3>



<p>On the code below, we get the form values and add the JWT to it. We convert the form values to JSON via <code>stringify()</code> function so that it can be sent to the API.</p>



<p>Replace the <code>// get form data and jwt here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// get form data
var update_account_form_obj = update_account_form.serializeObject()

// add jwt on the object
update_account_form_obj.jwt = jwt;

// convert object to json string
var form_data=JSON.stringify(update_account_form_obj);

// send data to api here
</pre></div>


<h3><span id="Send_data_to_API">Send data to API</span></h3>



<p>We send the form values to update_user.php using jQuery AJAX method. If the response is successful, we tell the user his account was updated.</p>



<p>We store the new JWT to <code>localStorage</code> as well.</p>



<p>Replace the <code>// send data to api here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// submit form data to api
$.ajax({
    url: &quot;api/update_user.php&quot;,
    type : &quot;POST&quot;,
    contentType : &#039;application/json&#039;,
    data : form_data,
    success : function(result) {

        // tell the user account was updated
        $(&#039;#response&#039;).html(&quot;&lt;div class=&#039;alert alert-success&#039;&gt;Account was updated.&lt;/div&gt;&quot;);

        // store new jwt to coookie
        setCookie(&quot;jwt&quot;, result.jwt, 1);
    },

    // errors will be handled here
});
</pre></div>


<h3><span id="Show_error_message">Show error message</span></h3>



<p>If the system is unable to update the user, we tell the user about that.</p>



<p>If JWT is invalid and access is denied, we logout the user and ask him to log in.</p>



<p>Replace the <code>// errors will be handled here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// show error message to user
error: function(xhr, resp, text){
    if(xhr.responseJSON.message==&quot;Unable to update user.&quot;){
        $(&#039;#response&#039;).html(&quot;&lt;div class=&#039;alert alert-danger&#039;&gt;Unable to update account.&lt;/div&gt;&quot;);
    }

    else if(xhr.responseJSON.message==&quot;Access denied.&quot;){
        showLoginPage();
        $(&#039;#response&#039;).html(&quot;&lt;div class=&#039;alert alert-success&#039;&gt;Access denied. Please login&lt;/div&gt;&quot;);
    }
}
</pre></div>


<h3><span id="Output-9">Output</span></h3>



<ul><li>If a user account was updated successfully.</li></ul>



<figure class="wp-block-image"><a href="https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-success.jpg"><img loading="lazy" width="1021" height="747" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-success.jpg" alt="" class="wp-image-19431" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-success.jpg 1021w, https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-success-300x219.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-success-768x562.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-success-705x516.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-success-450x329.jpg 450w" sizes="(max-width: 1021px) 100vw, 1021px" /></a></figure>



<ul><li>If there was a problem when updating a user account.</li></ul>



<figure class="wp-block-image"><a href="https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-failed.jpg"><img loading="lazy" width="1022" height="762" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-failed.jpg" alt="" class="wp-image-19453" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-failed.jpg 1022w, https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-failed-300x224.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-failed-768x573.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-failed-705x526.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/9-update-account-failed-450x336.jpg 450w" sizes="(max-width: 1022px) 100vw, 1022px" /></a></figure>



<h2><span id="Add_JavaScript_for_user_logout">Add JavaScript for user logout</span></h2>



<h3><span id="Add_a_trigger_to_logout">Add a trigger to logout</span></h3>



<p>The <code>click</code> trigger below is used when the user click the <code>Logout</code> link on the menu.</p>



<p>We use the <code>showLoginPage();</code> method to logout the user. We tell he is logged out as well.</p>



<p>Replace the <code>// trigger to logout will be here</code> comment of <code>index.html</code> file with the following code.</p>


<div class="wp-block-syntaxhighlighter-code "><pre class="brush: jscript; title: ; notranslate" title="">// logout the user
$(document).on(&#039;click&#039;, &#039;#logout&#039;, function(){
    showLoginPage();
    $(&#039;#response&#039;).html(&quot;&lt;div class=&#039;alert alert-info&#039;&gt;You are logged out.&lt;/div&gt;&quot;);
});
</pre></div>


<h3><span id="Output-10">Output</span></h3>



<ul><li>If the user clicked the <code>Logout</code> link on the menu.</li></ul>



<figure class="wp-block-image"><a href="https://www.codeofaninja.com/wp-content/uploads/2018/09/10-logout.jpg"><img loading="lazy" width="1019" height="628" src="https://www.codeofaninja.com/wp-content/uploads/2018/09/10-logout.jpg" alt="" class="wp-image-19432" srcset="https://www.codeofaninja.com/wp-content/uploads/2018/09/10-logout.jpg 1019w, https://www.codeofaninja.com/wp-content/uploads/2018/09/10-logout-300x185.jpg 300w, https://www.codeofaninja.com/wp-content/uploads/2018/09/10-logout-768x473.jpg 768w, https://www.codeofaninja.com/wp-content/uploads/2018/09/10-logout-705x434.jpg 705w, https://www.codeofaninja.com/wp-content/uploads/2018/09/10-logout-450x277.jpg 450w" sizes="(max-width: 1019px) 100vw, 1019px" /></a></figure>



<h2><span id="Download_source_codes">Download source codes</span></h2>



<p>We highly recommend for you to follow and study our well-detailed, step-by-step tutorial above first. Nothing beats experience when it comes to learning.</p>



<p>But we believe you will learn faster if you’ll see the final source code as well. We consider it as your additional guide.</p>



<p>Imagine the value or skill upgrade it can bring you. The additional income you can get from your work, projects or business. The precious time you save. Isn’t that what you want?</p>



<h3><span id="Download_LEVEL_1_source_code">Download LEVEL 1 source code</span></h3>



<div class="features-list">
<table>
<tbody>
<tr>
<td><b>FEATURES</b></td>
<td><b>LEVEL 1</b></td>
</tr>
<tr>
<td>API for user registration / sign up</td>
<td>YES</td>
</tr>
<tr>
<td>API for user login</td>
<td>YES</td>
</tr>
<tr>
<td>API for JWT validation</td>
<td>YES</td>
</tr>
<tr>
<td>API for updating user account</td>
<td>YES</td>
</tr>
<tr>
<td>Sign up page / registration form</td>
<td>YES</td>
</tr>
<tr>
<td>HTML5 validation for registration form</td>
<td>YES</td>
</tr>
<tr>
<td>Tell the user if sign up is successful</td>
<td>YES</td>
</tr>
<tr>
<td>Login using email and password</td>
<td>YES</td>
</tr>
<tr>
<td>Tell the user if login failed</td>
<td>YES</td>
</tr>
<tr>
<td>Tell the user if successfully logged in</td>
<td>YES</td>
</tr>
<tr>
<td>Restricted access to home page</td>
<td>YES</td>
</tr>
<tr>
<td>Restricted access to account page</td>
<td>YES</td>
</tr>
<tr>
<td>Show home page when logged in</td>
<td>YES</td>
</tr>
<tr>
<td>Show accounts page when logged in</td>
<td>YES</td>
</tr>
<tr>
<td>Update user information</td>
<td>YES</td>
</tr>
<tr>
<td>Tell the user if updating the account failed</td>
<td>YES</td>
</tr>
<tr>
<td>Logout user</td>
<td>YES</td>
</tr>
<tr>
<td>FREE email support for 3 months</td>
<td>YES</td>
</tr>
<tr>
<td>Source code updates via email</td>
<td>YES</td>
</tr>
<tr>
<td colspan="2"><a href="https://buy.paddle.com/product/663263" target="_blank" class="paddle_download_button" rel="noopener">$30 &#8211; Download now</a></td>
</tr>
</tbody>
</table>
</div>



<h3><span id="152_Download_LEVEL_2_source_code">15.2 Download LEVEL 2 source code</span></h3>



<div class="features-list">
<table>
<tbody>
<tr>
<td><b>FEATURES</b></td>
<td><b>LEVEL 2</b></td>
</tr>
<tr>
<td>All features of LEVEL 1 source code</td>
<td>YES</td>
</tr>
<tr>
<td>User access level</td>
<td>YES</td>
</tr>
<tr>
<td>Admin access level</td>
<td>YES</td>
</tr>
<tr>
<td>Admin can create user</td>
<td>YES</td>
</tr>
<tr>
<td>Admin can read different user information</td>
<td>YES</td>
</tr>
<tr>
<td>Admin can update user information</td>
<td>YES</td>
</tr>
<tr>
<td>Admin can delete user</td>
<td>YES</td>
</tr>
<tr>
<td>Admin can read users with pagination</td>
<td>YES</td>
</tr>
<tr>
<td>Admin can search users</td>
<td>YES</td>
</tr>
<tr>
<td>API for creating a user</td>
<td>YES</td>
</tr>
<tr>
<td>API for reading users list (with pagination)</td>
<td>YES</td>
</tr>
<tr>
<td>API for reading user information</td>
<td>YES</td>
</tr>
<tr>
<td>API for updating a user</td>
<td>YES</td>
</tr>
<tr>
<td>API for deleting a user</td>
<td>YES</td>
</tr>
<tr>
<td>Tell the user if a request fails or succeeds.</td>
<td>YES</td>
</tr>
<tr>
<td>Validate JWT for every HTTP request</td>
<td>YES</td>
</tr>
<tr>
<td>FREE email support for 6 months</td>
<td>YES</td>
</tr>
<tr>
<td>Source code updates via email</td>
<td>YES</td>
</tr>
<tr>
<td colspan="2"><a href="https://buy.paddle.com/product/663264" target="_blank" class="paddle_download_button" rel="noopener">$50 &#8211; Download now</a></td>
</tr>
</tbody>
</table>
</div>



<h2><span id="What8217s_Next">What&#8217;s Next?</span></h2>



<p>We will learn how to create, read, update and delete database records (with user interface) on our <a href="https://www.codeofaninja.com/2015/06/php-crud-with-ajax-and-oop.html">AJAX CRUD Tutorial</a>.</p>



<p>If you want to receive new and updated high-quality tutorials, <a href="https://www.codeofaninja.com/subscribe">please subscribe</a> for free.</p>



<h2><span id="Related_Tutorials">Related Tutorials</span></h2>


<div class='adinserter-code-block adinserter-code-block-1'>
<div style="margin-bottom:30px;">
We listed all our high quality full-stack web development tutorials here: <a href="https://codeofaninja.com/web-development-tutorials/" target="_blank">Click here</a>.
</div></div>




<h2><span id="Notes">Notes</span></h2>


<div class='adinserter-code-block adinserter-code-block-3'>
<h3><span id="Found_An_Issue">Found An Issue?</span></h3>

<br />
<p>
If you found a problem with this code, please send us an email. Before you send an email, please read our <a href="https://www.codeofaninja.com/code-of-conduct" target="_blank">our code of conduct</a>. Our team's email address is <strong><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="43303633332c313703202c27262c25222d2a2d29226d202c2e">[email&#160;protected]</a></strong>
</p>

<br />
<p>
Please be descriptive about your issue. Please provide the error messages, screenshots (or screen recording) and your test URL. Thanks!
</p>

<br />
<h3><span id="Subscribe_to_CodeOfaNinja">Subscribe to CodeOfaNinja</span></h3>

<br />
<p>
Receive valuable web development tutorials to your email. Subscribe now for FREE!
</p>

<br />
<p>
<div class='adinserter-code-block adinserter-code-block-11' style='margin: 8px 0; clear: both;'>
<div class="coan-subscribe">

<form action="https://em.codalify.com/subscribe" class="subscribe-form" method="POST" accept-charset="utf-8">

  <div>
  	<div><label for="name">Name</label></div>
  	<div><input type="text" name="name" style="width:300px;"/></div>
	</div>
	
	<div style="margin-top:10px;">
  	<div><label for="email">Email</label></div>
  	<div><input type="email" name="email" style="width:300px;"/></div>
	</div>
	
	<div style="display:none;">
  	<label for="hp">HP</label>
  	<input type="text" name="hp"/>
	</div>
	
	<div style="margin-top:20px;">
  	<input type="hidden" name="list" value="2XvG7m03j7rY9UEUQvQiyA"/>
  	<input type="hidden" name="subform" value="yes"/>
  	<input class="wp-block-button is-style-outline" type="submit" name="submit" value="Subscribe Now" />
  </div>
</form>

</div>
<style>
.adinserter-code-block-11{
  margin: auto !important;
}
</style></div>

</p>


<br />
<h3><span id="Thank_You">Thank You!</span></h3></div>




<p>Please note that this post is not yet in its final form. We are going to update this post so it will be perfect in the future.</p>



<p>If you have a friend or know someone who needs this REST API Authentication Example in PHP &amp; JWT, please share this page with them! I know you will help them a lot by doing it. Thanks!</p>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon sd-sharing"><h3 class="sd-title"><span id="Share_our_tutorial">Share our tutorial</span></h3><div class="sd-content"><ul><li class="share-linkedin"><a rel="nofollow noopener noreferrer" data-shared="sharing-linkedin-19187" class="share-linkedin sd-button share-icon no-text" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/?share=linkedin" target="_blank" title="Click to share on LinkedIn" ><span></span><span class="sharing-screen-reader-text">Click to share on LinkedIn (Opens in new window)</span></a></li><li class="share-twitter"><a rel="nofollow noopener noreferrer" data-shared="sharing-twitter-19187" class="share-twitter sd-button share-icon no-text" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/?share=twitter" target="_blank" title="Click to share on Twitter" ><span></span><span class="sharing-screen-reader-text">Click to share on Twitter (Opens in new window)</span></a></li><li class="share-facebook"><a rel="nofollow noopener noreferrer" data-shared="sharing-facebook-19187" class="share-facebook sd-button share-icon no-text" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/?share=facebook" target="_blank" title="Click to share on Facebook" ><span></span><span class="sharing-screen-reader-text">Click to share on Facebook (Opens in new window)</span></a></li><li class="share-pocket"><a rel="nofollow noopener noreferrer" data-shared="" class="share-pocket sd-button share-icon no-text" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/?share=pocket" target="_blank" title="Click to share on Pocket" ><span></span><span class="sharing-screen-reader-text">Click to share on Pocket (Opens in new window)</span></a></li><li class="share-reddit"><a rel="nofollow noopener noreferrer" data-shared="" class="share-reddit sd-button share-icon no-text" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/?share=reddit" target="_blank" title="Click to share on Reddit" ><span></span><span class="sharing-screen-reader-text">Click to share on Reddit (Opens in new window)</span></a></li><li class="share-email"><a rel="nofollow noopener noreferrer" data-shared="" class="share-email sd-button share-icon no-text" href="/cdn-cgi/l/email-protection#b986caccdbd3dcdacd849c8cfbead1d8cbdcdd9c8b89e9d6cacd9c8cfd9c8b89ebfceaed9c8b89f8e9f09c8b89f8cccdd1dcd7cdd0dad8cdd0d6d79c8b89fcc1d8d4c9d5dc9c8b89d0d79c8b89e9f1e99c8b89949c8b89f3eeed9c8b89edcccdd6cbd0d8d59fdbd6ddc084d1cdcdc9ca9c8af89c8bff9c8bffcecece97dad6dddcd6dfd8d7d0d7d3d897dad6d49c8bffcbdccacd94d8c9d094d8cccdd1dcd7cdd0dad8cdd0d6d794dcc1d8d4c9d5dc94c9d1c994d3cecd94cdcccdd6cbd0d8d59c8bff9fcad1d8cbdc84dcd4d8d0d5" target="_blank" title="Click to email a link to a friend" data-email-share-error-title="Do you have email set up?" data-email-share-error-text="If you&#039;re having problems sharing via email, you might not have email set up for your browser. You may need to create a new email yourself." data-email-share-nonce="bfdaa07e68" data-email-share-track-url="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/?share=email"><span></span><span class="sharing-screen-reader-text">Click to email a link to a friend (Opens in new window)</span></a></li><li class="share-telegram"><a rel="nofollow noopener noreferrer" data-shared="" class="share-telegram sd-button share-icon no-text" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/?share=telegram" target="_blank" title="Click to share on Telegram" ><span></span><span class="sharing-screen-reader-text">Click to share on Telegram (Opens in new window)</span></a></li><li class="share-jetpack-whatsapp"><a rel="nofollow noopener noreferrer" data-shared="" class="share-jetpack-whatsapp sd-button share-icon no-text" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/?share=jetpack-whatsapp" target="_blank" title="Click to share on WhatsApp" ><span></span><span class="sharing-screen-reader-text">Click to share on WhatsApp (Opens in new window)</span></a></li><li class="share-skype"><a rel="nofollow noopener noreferrer" data-shared="sharing-skype-19187" class="share-skype sd-button share-icon no-text" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/?share=skype" target="_blank" title="Click to share on Skype" ><span></span><span class="sharing-screen-reader-text">Click to share on Skype (Opens in new window)</span></a></li><li class="share-print"><a rel="nofollow noopener noreferrer" data-shared="" class="share-print sd-button share-icon no-text" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#print" target="_blank" title="Click to print" ><span></span><span class="sharing-screen-reader-text">Click to print (Opens in new window)</span></a></li><li class="share-tumblr"><a rel="nofollow noopener noreferrer" data-shared="" class="share-tumblr sd-button share-icon no-text" href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/?share=tumblr" target="_blank" title="Click to share on Tumblr" ><span></span><span class="sharing-screen-reader-text">Click to share on Tumblr (Opens in new window)</span></a></li><li class="share-end"></li></ul></div></div></div>	</div><!-- .entry-content -->

	<footer class="entry-footer default-max-width">
		<div class="posted-by"><span class="posted-on">Published <time class="entry-date published updated" datetime="2018-09-19T13:23:20+08:00">September 19, 2018</time></span></div><div class="post-taxonomies"><span class="cat-links">Categorized as <a href="https://www.codeofaninja.com/category/tut-rest-api-auth/" rel="category tag">tut - rest api auth</a>, <a href="https://www.codeofaninja.com/category/rest-api/" rel="category tag">REST API</a> </span></div>	</footer><!-- .entry-footer -->

				<div class="author-bio show-avatars">
		<img alt='' src='https://secure.gravatar.com/avatar/988badce0016da7e152cb3b4b747da2f?s=85&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/988badce0016da7e152cb3b4b747da2f?s=170&#038;d=mm&#038;r=g 2x' class='avatar avatar-85 photo' height='85' width='85' loading='lazy'/>		<div class="author-bio-content">
			<h2 class="author-title">
			By Mike Dalisay			</h2>
			<p class="author-description"> I'm Mike Dalisay, a pro web developer since 2010. I love web development. Improving our tutorials and source codes makes me happy. Do you want to suggest an edit to our tutorial? Got something to ask about our source codes? You may use our comments section below or email our team at <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="21525451514e535561424e45444e47404f484f4b400f424e4c">[email&#160;protected]</a></p><!-- .author-description -->
			<a class="author-link" href="https://www.codeofaninja.com/author/mike/" rel="author">View all of Mike Dalisay&#039;s posts.</a>		</div><!-- .author-bio-content -->
	</div><!-- .author-bio -->
	
</article><!-- #post-19187 -->

<div id="comments" class="comments-area default-max-width show-avatars">

			<h2 class="comments-title">
							23 comments					</h2><!-- .comments-title -->

		<ol class="comment-list">
					<li id="comment-18638" class="comment even thread-even depth-1 parent">
			<article id="div-comment-18638" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/5a53b558c77b7adfae1d1fda97fcec52?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/5a53b558c77b7adfae1d1fda97fcec52?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn">Eiasir Arafat</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-18638"><time datetime="2022-08-24T19:28:09+08:00">August 24, 2022 at 7:28 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>i am getting this issue when calling<br />
1. validate_token.php<br />
2. update_user.php<br />
{<br />
    &#8220;message&#8221;: &#8220;Access denied.&#8221;,<br />
    &#8220;error&#8221;: &#8220;\&#8221;kid\&#8221; empty, unable to lookup correct key&#8221;<br />
}</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-18638' data-commentid="18638" data-postid="19187" data-belowelement="div-comment-18638" data-respondelement="respond" data-replyto="Reply to Eiasir Arafat" aria-label='Reply to Eiasir Arafat'>Reply</a></div>			</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-18643" class="comment byuser comment-author-mike bypostauthor odd alt depth-2">
			<article id="div-comment-18643" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/988badce0016da7e152cb3b4b747da2f?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/988badce0016da7e152cb3b4b747da2f?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com/" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-18643"><time datetime="2022-08-25T11:32:19+08:00">August 25, 2022 at 11:32 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Eiasir, this is a known issue, and we&#8217;ll update the tutorial soon. For now, which version of the Firebase JWT package are you using? If you&#8217;re using a newer one, this answer might help: <a href="https://stackoverflow.com/a/72310650" rel="nofollow ugc">https://stackoverflow.com/a/72310650</a></p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-18643' data-commentid="18643" data-postid="19187" data-belowelement="div-comment-18643" data-respondelement="respond" data-replyto="Reply to Mike Dalisay" aria-label='Reply to Mike Dalisay'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-14113" class="comment even thread-odd thread-alt depth-1 parent">
			<article id="div-comment-14113" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/206f6edd5ddf774107965cb0d7897c3b?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/206f6edd5ddf774107965cb0d7897c3b?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn">leo</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-14113"><time datetime="2022-04-12T22:11:16+08:00">April 12, 2022 at 10:11 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hello, I followed your tutorial but in the section<br />
<a href="http://localhost/rest-api-authentication-example/api/login.php" rel="nofollow ugc">http://localhost/rest-api-authentication-example/api/login.php</a> I got the error</p>
<p><b>Fatal Error</b>: ArgumentCountError: Too few arguments to work Firebase\JWT\JWT::encode(),<br />
2 passed in D:\xampp\htdocs\api\api\login.php on line 60 and at least 3 expected in D:\xampp\htdocs\api\api\libs\php-jwt-master\src\JWT. php: 178<br />
Stack trace:<br />
#0 D:\xampp\htdocs\api\api\login.php(60): Firebase\JWT\JWT::encode(Array, &#8216;123456789000000&#8230;&#8217;)<br />
#1 {main<br />
}<br />
  thrown in <b>D:\xampp\htdocs\api\api\libs\php-jwt-master\src\JWT.php</b> on line <b>178</b></p>
<p>I can&#8217;t make progress can you help me please?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-14113' data-commentid="14113" data-postid="19187" data-belowelement="div-comment-14113" data-respondelement="respond" data-replyto="Reply to leo" aria-label='Reply to leo'>Reply</a></div>			</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-14847" class="comment byuser comment-author-mike bypostauthor odd alt depth-2">
			<article id="div-comment-14847" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/988badce0016da7e152cb3b4b747da2f?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/988badce0016da7e152cb3b4b747da2f?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com/" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-14847"><time datetime="2022-05-30T09:50:11+08:00">May 30, 2022 at 9:50 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi @Leo, I cannot reproduce the issue. Would you show us line 60 of your login.php file?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-14847' data-commentid="14847" data-postid="19187" data-belowelement="div-comment-14847" data-respondelement="respond" data-replyto="Reply to Mike Dalisay" aria-label='Reply to Mike Dalisay'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-13822" class="comment even thread-even depth-1">
			<article id="div-comment-13822" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/427c593e3e7c0968bca207793153c4ef?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/427c593e3e7c0968bca207793153c4ef?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn">BN</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-13822"><time datetime="2021-07-15T13:22:29+08:00">July 15, 2021 at 1:22 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>My 2 cents.</p>
<p>You have error in code part of Create() function in user class for INSERT SQL expression.</p>
<p>// create new user record<br />
function create(){<br />
&#8230;<br />
                // insert query<br />
                $query = &#8220;INSERT INTO &#8221; . $this->table_name . &#8221;<br />
                        (firstname,lastname,email,password)<br />
                        VALUES (:firstname,:lastname,:email,:password)<br />
                        &#8220;;<br />
&#8230;</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-13822' data-commentid="13822" data-postid="19187" data-belowelement="div-comment-13822" data-respondelement="respond" data-replyto="Reply to BN" aria-label='Reply to BN'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-13824" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-13824" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/87bc08cbfedcc6f8ba90b1066963c718?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/87bc08cbfedcc6f8ba90b1066963c718?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://plus.google.com/116879938184754027848" rel="external nofollow ugc" class="url">Johan Osorio</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-13824"><time datetime="2021-04-30T00:39:14+08:00">April 30, 2021 at 12:39 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi, how are you? I was reviewing your tutorial and it is interesting but I see that the urls end in .php, it should look different without the example extension:</p>
<p>header (&#8220;Access-Control-Allow-Origin: http: // localhost / rest-api-authentication-example /&#8221;); in that code it says that it only accepts requests that come from orgines of this url</p>
<p>which is not right, because it should be from any website that consumes data</p>
<p>I appreciate your help with the answer to see if I buy the script</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-13824' data-commentid="13824" data-postid="19187" data-belowelement="div-comment-13824" data-respondelement="respond" data-replyto="Reply to Johan Osorio" aria-label='Reply to Johan Osorio'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-8858" class="comment even thread-even depth-1">
			<article id="div-comment-8858" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8858"><time datetime="2018-11-21T12:12:00+08:00">November 21, 2018 at 12:12 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi @disqus_LGtoUa2quM, we&#8217;ll try to do it in the future. Please subscribe so you can be notified: <a href="https://www.codeofaninja.com/subscribe" rel="nofollow ugc">https://www.codeofaninja.com/subscribe</a></p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8858' data-commentid="8858" data-postid="19187" data-belowelement="div-comment-8858" data-respondelement="respond" data-replyto="Reply to Mike Dalisay" aria-label='Reply to Mike Dalisay'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-8857" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-8857" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8857"><time datetime="2018-11-21T11:42:00+08:00">November 21, 2018 at 11:42 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi @disqus_i0FJTz5h4J, in that case, you need to verify if $this-&gt;password has value. You can add this code before the // sanitize comment on section 5.6 above.</p>
<p><code><br />
$this-&gt;password = $this-&gt;password!="" ? $this-&gt;password : die("ERROR: Password is empty.");<br />
</code></p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8857' data-commentid="8857" data-postid="19187" data-belowelement="div-comment-8857" data-respondelement="respond" data-replyto="Reply to Mike Dalisay" aria-label='Reply to Mike Dalisay'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-8842" class="comment even thread-even depth-1">
			<article id="div-comment-8842" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8842"><time datetime="2018-11-21T10:16:00+08:00">November 21, 2018 at 10:16 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>The serializeObject() function has been in section 10.6</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8842' data-commentid="8842" data-postid="19187" data-belowelement="div-comment-8842" data-respondelement="respond" data-replyto="Reply to Mike Dalisay" aria-label='Reply to Mike Dalisay'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-8703" class="comment odd alt thread-odd thread-alt depth-1 parent">
			<article id="div-comment-8703" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/47ed08c4e3726fd91aaed4326306b2e4?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/47ed08c4e3726fd91aaed4326306b2e4?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn">Majk</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8703"><time datetime="2018-10-25T22:13:00+08:00">October 25, 2018 at 10:13 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Thank you so much for putting this together. I found it really useful! Although one thing that concerns me is storing the token in localstorage, quoting from <a href="https://stormpath.com/blog/where-to-store-your-jwts-cookies-vs-html5-web-storage" rel="nofollow ugc">https://stormpath.com/blog/where-to-store-your-jwts-cookies-vs-html5-web-storage</a>; &#8220;Web Storage (localStorage/sessionStorage) is accessible through JavaScript on the same domain. This means that any JavaScript running on your site will have access to web storage, and because of this can be vulnerable to cross-site scripting (XSS) attacks. XSS, in a nutshell, is a type of vulnerability where an attacker can inject JavaScript that will run on your page.&#8221;</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8703' data-commentid="8703" data-postid="19187" data-belowelement="div-comment-8703" data-respondelement="respond" data-replyto="Reply to Majk" aria-label='Reply to Majk'>Reply</a></div>			</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-8705" class="comment even depth-2">
			<article id="div-comment-8705" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8705"><time datetime="2018-10-30T18:09:00+08:00">October 30, 2018 at 6:09 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi @disqus_8BJXiwIHLL, you&#8217;re welcome and thanks for your concern. You&#8217;re right, I got the wrong reference the first time. I updated the tutorial above and I&#8217;m now using a cookie to store the JWT.</p>
<p>I need to update it again in the future for CSRF attack protection. For now, I believe our tutorial above is still a good reference for basic understanding of how JWT works.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8705' data-commentid="8705" data-postid="19187" data-belowelement="div-comment-8705" data-respondelement="respond" data-replyto="Reply to Mike Dalisay" aria-label='Reply to Mike Dalisay'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-8649" class="comment odd alt thread-even depth-1 parent">
			<article id="div-comment-8649" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8649"><time datetime="2018-10-23T07:00:00+08:00">October 23, 2018 at 7:00 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Please follow section 9.8 for that. Thank you!</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8649' data-commentid="8649" data-postid="19187" data-belowelement="div-comment-8649" data-respondelement="respond" data-replyto="Reply to Mike Dalisay" aria-label='Reply to Mike Dalisay'>Reply</a></div>			</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-8702" class="comment even depth-2 parent">
			<article id="div-comment-8702" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/adcd5f088d55281b29b904d0be0df86d?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/adcd5f088d55281b29b904d0be0df86d?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn">DANN CHRISTIAN</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8702"><time datetime="2018-10-24T08:51:00+08:00">October 24, 2018 at 8:51 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Mike Thanks for the reply, i check already and seems no data has been pass on section 9.8 in create_user.php kindly assist me with this thank you</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8702' data-commentid="8702" data-postid="19187" data-belowelement="div-comment-8702" data-respondelement="respond" data-replyto="Reply to DANN CHRISTIAN" aria-label='Reply to DANN CHRISTIAN'>Reply</a></div>			</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-8704" class="comment odd alt depth-3 parent">
			<article id="div-comment-8704" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8704"><time datetime="2018-10-30T18:03:00+08:00">October 30, 2018 at 6:03 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I&#8217;m unable to replicate the issue. Did you see any errors on the console?</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-8838" class="comment even depth-3 parent">
			<article id="div-comment-8838" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/adcd5f088d55281b29b904d0be0df86d?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/adcd5f088d55281b29b904d0be0df86d?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn">DANN CHRISTIAN</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8838"><time datetime="2018-10-31T07:40:00+08:00">October 31, 2018 at 7:40 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>No error found including the error handler and notification upon singingup kindly visit my website  <a href="http://dev.coolmach.com.ph/android_login_auth/" rel="nofollow ugc">http://dev.coolmach.com.ph/android_login_auth/</a> thank you</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-8840" class="comment odd alt depth-3">
			<article id="div-comment-8840" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8840"><time datetime="2018-11-21T10:10:00+08:00">November 21, 2018 at 10:10 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I still can&#8217;t replicate this issue. I won&#8217;t be able to solve it because I can&#8217;t see any error message to solve.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-8645" class="comment even thread-odd thread-alt depth-1">
			<article id="div-comment-8645" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8645"><time datetime="2018-10-22T14:16:00+08:00">October 22, 2018 at 2:16 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi @disqus_B3RJLIpPZj , thanks for the kind words! Your question makes sense so I added section 1.4 above to shed some light into this.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8645' data-commentid="8645" data-postid="19187" data-belowelement="div-comment-8645" data-respondelement="respond" data-replyto="Reply to Mike Dalisay" aria-label='Reply to Mike Dalisay'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-8644" class="comment odd alt thread-even depth-1">
			<article id="div-comment-8644" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8644"><time datetime="2018-10-22T13:19:00+08:00">October 22, 2018 at 1:19 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi @margandavor, I updated the tutorial with section 9.3, 9.7 and 10.5. I suggest following the tutorial with the new sections.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8644' data-commentid="8644" data-postid="19187" data-belowelement="div-comment-8644" data-respondelement="respond" data-replyto="Reply to Mike Dalisay" aria-label='Reply to Mike Dalisay'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-8640" class="comment even thread-odd thread-alt depth-1">
			<article id="div-comment-8640" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8640"><time datetime="2018-10-22T13:04:00+08:00">October 22, 2018 at 1:04 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Please add the code from section 9.7 in that case.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8640' data-commentid="8640" data-postid="19187" data-belowelement="div-comment-8640" data-respondelement="respond" data-replyto="Reply to Mike Dalisay" aria-label='Reply to Mike Dalisay'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-8585" class="comment odd alt thread-even depth-1 parent">
			<article id="div-comment-8585" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/adcd5f088d55281b29b904d0be0df86d?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/adcd5f088d55281b29b904d0be0df86d?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn">DANN CHRISTIAN</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8585"><time datetime="2018-10-13T13:56:00+08:00">October 13, 2018 at 1:56 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hello someone can help me here, Signup page its not showing im in 9.0 CREATE INTERFACE FOR USER REGISTRATION chapter and in signup, i see its not appearing in the index.html</p>
<p>thank you</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8585' data-commentid="8585" data-postid="19187" data-belowelement="div-comment-8585" data-respondelement="respond" data-replyto="Reply to DANN CHRISTIAN" aria-label='Reply to DANN CHRISTIAN'>Reply</a></div>			</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-8586" class="comment even depth-2 parent">
			<article id="div-comment-8586" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8586"><time datetime="2018-10-14T06:58:00+08:00">October 14, 2018 at 6:58 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>We are unable to replicate the issue. It works on our end. Would send a screenshot of the error message you encountered?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-8586' data-commentid="8586" data-postid="19187" data-belowelement="div-comment-8586" data-respondelement="respond" data-replyto="Reply to Mike Dalisay" aria-label='Reply to Mike Dalisay'>Reply</a></div>			</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-8636" class="comment odd alt depth-3 parent">
			<article id="div-comment-8636" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/adcd5f088d55281b29b904d0be0df86d?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/adcd5f088d55281b29b904d0be0df86d?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn">DANN CHRISTIAN</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8636"><time datetime="2018-10-18T08:44:00+08:00">October 18, 2018 at 8:44 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>No error encounter but, the page is not showing on my end is there any problem kindly check this one thank you! <a href="http://coolmach.com.ph/dev/android_login_auth" rel="nofollow ugc">http://coolmach.com.ph/dev/android_login_auth</a></p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-8638" class="comment even depth-3">
			<article id="div-comment-8638" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25017b0dfec67ddcd8a50c32800f7553?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href="https://www.codeofaninja.com" rel="external nofollow ugc" class="url">Mike Dalisay</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://www.codeofaninja.com/rest-api-authentication-example-php-jwt-tutorial/#comment-8638"><time datetime="2018-10-22T11:47:00+08:00">October 22, 2018 at 11:47 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi @dannchristian, I updated the tutorial with section 9.3 and 10.5. Please follow the additional sections.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		
			
		<div id="respond" class="comment-respond">
		<h2 id="reply-title" class="comment-reply-title">Leave a comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/rest-api-authentication-example-php-jwt-tutorial/#respond" style="display:none;">Cancel reply</a></small></h2><form action="https://www.codeofaninja.com/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate><p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> <span class="required-field-message" aria-hidden="true">Required fields are marked <span class="required" aria-hidden="true">*</span></span></p><p class="comment-form-comment"><label for="comment">Comment <span class="required" aria-hidden="true">*</span></label> <textarea id="comment" name="comment" cols="45" rows="5" maxlength="65525" required></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required" aria-hidden="true">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" required /></p>
<p class="comment-form-email"><label for="email">Email <span class="required" aria-hidden="true">*</span></label> <input id="email" name="email" type="email" value="" size="30" maxlength="100" aria-describedby="email-notes" required /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="url" value="" size="30" maxlength="200" /></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='19187' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="6732071b56" /></p><p style="display: none !important;"><label>&#916;<textarea name="ak_hp_textarea" cols="45" rows="8" maxlength="100"></textarea></label><input type="hidden" id="ak_js_1" name="ak_js" value="66"/><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script>document.getElementById( "ak_js_1" ).setAttribute( "value", ( new Date() ).getTime() );</script></p></form>	</div><!-- #respond -->
	<p class="akismet_comment_form_privacy_notice">This site uses Akismet to reduce spam. <a href="https://akismet.com/privacy/" target="_blank" rel="nofollow noopener">Learn how your comment data is processed</a>.</p>
</div><!-- #comments -->

	<nav class="navigation post-navigation" aria-label="Posts">
		<h2 class="screen-reader-text">Post navigation</h2>
		<div class="nav-links"><div class="nav-previous"><a href="https://www.codeofaninja.com/create-simple-rest-api-in-php/" rel="prev"><p class="meta-nav"><svg class="svg-icon" width="24" height="24" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M20 13v-2H8l4-4-1-2-7 7 7 7 1-2-4-4z" fill="currentColor"/></svg>Previous post</p><p class="post-title">How To Create A Simple REST API in PHP? Step By Step Guide!</p></a></div><div class="nav-next"><a href="https://www.codeofaninja.com/javascript-tutorial-for-beginners-step-by-step/" rel="next"><p class="meta-nav">Next post<svg class="svg-icon" width="24" height="24" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="m4 13v-2h12l-4-4 1-2 7 7-7 7-1-2 4-4z" fill="currentColor"/></svg></p><p class="post-title">JavaScript Tutorial for Beginners &#8211; Step by step guide!</p></a></div></div>
	</nav>			</main><!-- #main -->
		</div><!-- #primary -->
	</div><!-- #content -->

	
	<footer id="colophon" class="site-footer">

					<nav aria-label="Secondary menu" class="footer-navigation">
				<ul class="footer-navigation-wrapper">
					<li id="menu-item-27792" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-27792"><a href="https://www.codeofaninja.com/"><span>Home</span></a></li>
<li id="menu-item-27790" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-27790"><a href="https://www.codeofaninja.com/privacy-policy/"><span>Privacy Policy</span></a></li>
<li id="menu-item-27791" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-27791"><a href="https://www.codeofaninja.com/terms-of-use/"><span>Terms of Use</span></a></li>
<li id="menu-item-27835" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-27835"><a href="https://www.codeofaninja.com/code-of-conduct/"><span>Code of Conduct</span></a></li>
				</ul><!-- .footer-navigation-wrapper -->
			</nav><!-- .footer-navigation -->
				<div class="site-info">
			<div class="site-name">
									<div class="site-logo"><a href="https://www.codeofaninja.com/" class="custom-logo-link" rel="home"><img width="5764" height="1152" src="https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3.png" class="custom-logo" alt="CodeOfaNinja" srcset="https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3.png 5764w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-300x60.png 300w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-768x153.png 768w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-1030x206.png 1030w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-1500x300.png 1500w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-705x141.png 705w, https://www.codeofaninja.com/wp-content/uploads/2019/03/codeofaninja-with-text-3-450x90.png 450w" sizes="(max-width: 5764px) 100vw, 5764px" /></a></div>
							</div><!-- .site-name -->

			
			<div class="powered-by">
				Proudly powered by <a href="https://wordpress.org/">WordPress</a>.			</div><!-- .powered-by -->

		</div><!-- .site-info -->
	</footer><!-- #colophon -->

</div><!-- #page -->

        <div id="wpfront-scroll-top-container">
            <div class="text-holder">Back to top</div>        </div>

        <style type="text/css">
            #wpfront-scroll-top-container div.text-holder {
                color: #ffffff;
                background-color: #000000;
                width: auto;
                height: auto;

                            }

            #wpfront-scroll-top-container div.text-holder:hover {
                background-color: #000000;
            }
        </style>
                <script type="text/javascript">
            function wpfront_scroll_top_init() {
                if (typeof wpfront_scroll_top === "function" && typeof jQuery !== "undefined") {
                    wpfront_scroll_top({"scroll_offset":100,"button_width":0,"button_height":0,"button_opacity":0.8,"button_fade_duration":200,"scroll_duration":400,"location":2,"marginX":20,"marginY":20,"hide_iframe":false,"auto_hide":false,"auto_hide_after":2,"button_action":"top","button_action_element_selector":"","button_action_container_selector":"html, body","button_action_element_offset":0});
                } else {
                    setTimeout(wpfront_scroll_top_init, 100);
                }
            }
            wpfront_scroll_top_init();
        </script>
        <script>document.body.classList.remove("no-js");</script><button id="dark-mode-toggler" class="fixed-bottom" aria-pressed="false" onClick="toggleDarkMode()">Dark Mode: <span aria-hidden="true"></span></button>		<style>
			#dark-mode-toggler > span {
				margin-left: 5px;
			}
			#dark-mode-toggler > span::before {
				content: 'Off';
			}
			#dark-mode-toggler[aria-pressed="true"] > span::before {
				content: 'On';
			}
					</style>

		<script>function toggleDarkMode() { // jshint ignore:line
	var toggler = document.getElementById( 'dark-mode-toggler' );

	if ( 'false' === toggler.getAttribute( 'aria-pressed' ) ) {
		toggler.setAttribute( 'aria-pressed', 'true' );
		document.documentElement.classList.add( 'is-dark-theme' );
		document.body.classList.add( 'is-dark-theme' );
		window.localStorage.setItem( 'twentytwentyoneDarkMode', 'yes' );
	} else {
		toggler.setAttribute( 'aria-pressed', 'false' );
		document.documentElement.classList.remove( 'is-dark-theme' );
		document.body.classList.remove( 'is-dark-theme' );
		window.localStorage.setItem( 'twentytwentyoneDarkMode', 'no' );
	}
}

function twentytwentyoneIsDarkMode() {
	var isDarkMode = window.matchMedia( '(prefers-color-scheme: dark)' ).matches;

	if ( 'yes' === window.localStorage.getItem( 'twentytwentyoneDarkMode' ) ) {
		isDarkMode = true;
	} else if ( 'no' === window.localStorage.getItem( 'twentytwentyoneDarkMode' ) ) {
		isDarkMode = false;
	}

	return isDarkMode;
}

function darkModeInitialLoad() {
	var toggler = document.getElementById( 'dark-mode-toggler' ),
		isDarkMode = twentytwentyoneIsDarkMode();

	if ( isDarkMode ) {
		document.documentElement.classList.add( 'is-dark-theme' );
		document.body.classList.add( 'is-dark-theme' );
	} else {
		document.documentElement.classList.remove( 'is-dark-theme' );
		document.body.classList.remove( 'is-dark-theme' );
	}

	if ( toggler && isDarkMode ) {
		toggler.setAttribute( 'aria-pressed', 'true' );
	}
}

function darkModeRepositionTogglerOnScroll() {

	var toggler = document.getElementById( 'dark-mode-toggler' ),
		prevScroll = window.scrollY || document.documentElement.scrollTop,
		currentScroll,

		checkScroll = function() {
			currentScroll = window.scrollY || document.documentElement.scrollTop;
			if (
				currentScroll + ( window.innerHeight * 1.5 ) > document.body.clientHeight ||
				currentScroll < prevScroll
			) {
				toggler.classList.remove( 'hide' );
			} else if ( currentScroll > prevScroll && 250 < currentScroll ) {
				toggler.classList.add( 'hide' );
			}
			prevScroll = currentScroll;
		};

	if ( toggler ) {
		window.addEventListener( 'scroll', checkScroll );
	}
}

darkModeInitialLoad();
darkModeRepositionTogglerOnScroll();
</script>	<script>
	if ( -1 !== navigator.userAgent.indexOf( 'MSIE' ) || -1 !== navigator.appVersion.indexOf( 'Trident/' ) ) {
		document.body.classList.add( 'is-IE' );
	}
	</script>
	
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"https:\/\/www.codeofaninja.com\/rest-api-authentication-example-php-jwt-tutorial\/":19187};
	</script>
				<script src='https://www.codeofaninja.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9b' id='syntaxhighlighter-core-js'></script>
<script defer='defer' src='https://www.codeofaninja.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPlain.js?ver=3.0.9b' id='syntaxhighlighter-brush-plain-js'></script>
<script defer='defer' src='https://www.codeofaninja.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPhp.js?ver=3.0.9b' id='syntaxhighlighter-brush-php-js'></script>
<script defer='defer' src='https://www.codeofaninja.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJScript.js?ver=3.0.9b' id='syntaxhighlighter-brush-jscript-js'></script>
<script defer='defer' src='https://www.codeofaninja.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushXml.js?ver=3.0.9b' id='syntaxhighlighter-brush-xml-js'></script>
<script defer='defer' src='https://www.codeofaninja.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCss.js?ver=3.0.9b' id='syntaxhighlighter-brush-css-js'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "https://www.codeofaninja.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.head.appendChild( corecss );
		var themecssurl = "https://www.codeofaninja.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeEclipse.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		document.head.appendChild( themecss );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['class-name'] = 'code-block';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();

	// Infinite scroll support
	if ( typeof( jQuery ) !== 'undefined' ) {
		jQuery( function( $ ) {
			$( document.body ).on( 'post-load', function() {
				SyntaxHighlighter.highlight();
			} );
		} );
	}
</script>
<script id='pt-cv-content-views-script-js-extra'>
var PT_CV_PUBLIC = {"_prefix":"pt-cv-","page_to_show":"5","_nonce":"11850c3eb5","is_admin":"","is_mobile":"","ajaxurl":"https:\/\/www.codeofaninja.com\/wp-admin\/admin-ajax.php","lang":"","loading_image_src":"data:image\/gif;base64,R0lGODlhDwAPALMPAMrKygwMDJOTkz09PZWVla+vr3p6euTk5M7OzuXl5TMzMwAAAJmZmWZmZszMzP\/\/\/yH\/C05FVFNDQVBFMi4wAwEAAAAh+QQFCgAPACwAAAAADwAPAAAEQvDJaZaZOIcV8iQK8VRX4iTYoAwZ4iCYoAjZ4RxejhVNoT+mRGP4cyF4Pp0N98sBGIBMEMOotl6YZ3S61Bmbkm4mAgAh+QQFCgAPACwAAAAADQANAAAENPDJSRSZeA418itN8QiK8BiLITVsFiyBBIoYqnoewAD4xPw9iY4XLGYSjkQR4UAUD45DLwIAIfkEBQoADwAsAAAAAA8ACQAABC\/wyVlamTi3nSdgwFNdhEJgTJoNyoB9ISYoQmdjiZPcj7EYCAeCF1gEDo4Dz2eIAAAh+QQFCgAPACwCAAAADQANAAAEM\/DJBxiYeLKdX3IJZT1FU0iIg2RNKx3OkZVnZ98ToRD4MyiDnkAh6BkNC0MvsAj0kMpHBAAh+QQFCgAPACwGAAAACQAPAAAEMDC59KpFDll73HkAA2wVY5KgiK5b0RRoI6MuzG6EQqCDMlSGheEhUAgqgUUAFRySIgAh+QQFCgAPACwCAAIADQANAAAEM\/DJKZNLND\/kkKaHc3xk+QAMYDKsiaqmZCxGVjSFFCxB1vwy2oOgIDxuucxAMTAJFAJNBAAh+QQFCgAPACwAAAYADwAJAAAEMNAs86q1yaWwwv2Ig0jUZx3OYa4XoRAfwADXoAwfo1+CIjyFRuEho60aSNYlOPxEAAAh+QQFCgAPACwAAAIADQANAAAENPA9s4y8+IUVcqaWJ4qEQozSoAzoIyhCK2NFU2SJk0hNnyEOhKR2AzAAj4Pj4GE4W0bkJQIAOw=="};
var PT_CV_PAGINATION = {"first":"\u00ab","prev":"\u2039","next":"\u203a","last":"\u00bb","goto_first":"Go to first page","goto_prev":"Go to previous page","goto_next":"Go to next page","goto_last":"Go to last page","current_page":"Current page is","goto_page":"Go to page"};
</script>
<script defer='defer' src='https://www.codeofaninja.com/wp-content/plugins/content-views-query-and-display-post-page/public/assets/js/cv.js?ver=2.4.0.7' id='pt-cv-content-views-script-js'></script>
<script id='toc-front-js-extra'>
var tocplus = {"visibility_show":"show","visibility_hide":"hide","width":"Auto"};
</script>
<script defer='defer' src='https://www.codeofaninja.com/wp-content/plugins/table-of-contents-plus/front.min.js?ver=2106' id='toc-front-js'></script>
<script type="text/javascript" src="https://www.codeofaninja.com/wp-content/plugins/wpfront-scroll-top/js/wpfront-scroll-top.min.js?ver=2.0.7.08086" id="wpfront-scroll-top-js" async="async" defer="defer"></script>
<script id='edd-ajax-js-extra'>
var edd_scripts = {"ajaxurl":"https:\/\/www.codeofaninja.com\/wp-admin\/admin-ajax.php","position_in_cart":"","has_purchase_links":"","already_in_cart_message":"You have already added this item to your cart","empty_cart_message":"Your cart is empty","loading":"Loading","select_option":"Please select an option","is_checkout":"0","default_gateway":"","redirect_to_checkout":"0","checkout_page":"https:\/\/www.codeofaninja.com\/checkout\/?nocache=true","permalinks":"1","quantities_enabled":"","taxes_enabled":"0"};
</script>
<script defer='defer' src='https://www.codeofaninja.com/wp-content/plugins/easy-digital-downloads/assets/js/edd-ajax.js?ver=3.0.4' id='edd-ajax-js'></script>
<script defer='defer' src='https://www.codeofaninja.com/wp-includes/js/comment-reply.min.js?ver=6.0.2' id='comment-reply-js'></script>
<script id='twenty-twenty-one-ie11-polyfills-js-after'>
( Element.prototype.matches && Element.prototype.closest && window.NodeList && NodeList.prototype.forEach ) || document.write( '<script src="https://www.codeofaninja.com/wp-content/themes/twentytwentyone/assets/js/polyfills.js?ver=1.6"></scr' + 'ipt>' );
</script>
<script defer='defer' src='https://www.codeofaninja.com/wp-content/themes/twentytwentyone/assets/js/primary-navigation.js?ver=1.6' id='twenty-twenty-one-primary-navigation-script-js'></script>
<script defer='defer' src='https://www.codeofaninja.com/wp-content/themes/twentytwentyone/assets/js/responsive-embeds.js?ver=1.6' id='twenty-twenty-one-responsive-embeds-script-js'></script>
<script id='cookie-notice-front-js-extra'>
var cnArgs = {"ajaxUrl":"https:\/\/www.codeofaninja.com\/wp-admin\/admin-ajax.php","nonce":"c15540ff67","hideEffect":"slide","position":"bottom","onScroll":"0","onScrollOffset":"100","onClick":"0","cookieName":"cookie_notice_accepted","cookieTime":"2592000","cookieTimeRejected":"2592000","globalCookie":"0","redirection":"0","cache":"1","refuse":"0","revokeCookies":"0","revokeCookiesOpt":"automatic","secure":"1"};
</script>
<script async defer='defer' src='https://www.codeofaninja.com/wp-content/plugins/cookie-notice/js/front.min.js?ver=2.4.1' id='cookie-notice-front-js'></script>
<script defer defer='defer' src='https://www.codeofaninja.com/wp-content/plugins/akismet/_inc/akismet-frontend.js?ver=1664397284' id='akismet-frontend-js'></script>
<script id='sharing-js-js-extra'>
var sharing_js_options = {"lang":"en","counts":"1","is_stats_active":"1"};
</script>
<script defer='defer' src='https://www.codeofaninja.com/wp-content/plugins/jetpack/_inc/build/sharedaddy/sharing.min.js?ver=11.3.2' id='sharing-js-js'></script>
<script id='sharing-js-js-after'>
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-linkedin' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-linkedin' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomlinkedin', 'menubar=1,resizable=1,width=580,height=450' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-twitter' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-twitter' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-facebook' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-facebook' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-pocket' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-pocket' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcompocket', 'menubar=1,resizable=1,width=450,height=450' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-telegram' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-telegram' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomtelegram', 'menubar=1,resizable=1,width=450,height=450' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-skype' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-skype' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomskype', 'menubar=1,resizable=1,width=305,height=665' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-tumblr' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-tumblr' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomtumblr', 'menubar=1,resizable=1,width=450,height=450' );
						return false;
					}
				} );
			} )();
</script>
		<script>
		/(trident|msie)/i.test(navigator.userAgent)&&document.getElementById&&window.addEventListener&&window.addEventListener("hashchange",(function(){var t,e=location.hash.substring(1);/^[A-z0-9_-]+$/.test(e)&&(t=document.getElementById(e))&&(/^(?:a|select|input|button|textarea)$/i.test(t.tagName)||(t.tabIndex=-1),t.focus())}),!1);
		</script>
		<script src='https://stats.wp.com/e-202239.js' defer></script>
<script>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:11.3.2',blog:'124939297',post:'19187',tz:'8',srv:'www.codeofaninja.com'} ]);
	_stq.push([ 'clickTrackerInit', '124939297', '19187' ]);
</script>

		<!-- Cookie Notice plugin v2.4.1 by Hu-manity.co https://hu-manity.co/ -->
		<div id="cookie-notice" role="dialog" class="cookie-notice-hidden cookie-revoke-hidden cn-position-bottom" aria-label="Cookie Notice" style="background-color: rgba(0,0,0,1);"><div class="cookie-notice-container" style="color: #fff;"><span id="cn-notice-text" class="cn-text-container">By using this site, you agree to our <a href="https://www.codeofaninja.com/privacy-policy" target="_blank">Privacy Policy</a> and <a href="https://www.codeofaninja.com/terms-of-use" target="_blank">Terms of Use</a>.</span><span id="cn-notice-buttons" class="cn-buttons-container"><a href="#" id="cn-accept-cookie" data-cookie-set="accept" class="cn-set-cookie cn-button cn-button-custom button" aria-label="OK">OK</a></span><span id="cn-close-notice" data-cookie-set="accept" class="cn-close-icon" title="No"></span></div>
			
		</div>
		<!-- / Cookie Notice plugin --><!-- GOOGLE ANALYTICS -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-23794712-1', 'codeofaninja.com');
  ga('require', 'displayfeatures');
  ga('send', 'pageview');

</script>

<!-- PADDLE POP UP -->
<script src="https://cdn.paddle.com/paddle/paddle.js"></script>
<script type="text/javascript">
	Paddle.Setup({ vendor: 48700 });
</script>

<!-- RECAPTCHA -->
<script src="https://www.google.com/recaptcha/api.js?render=6Lf5ZcMZAAAAAMOPsToW_hFxzCagK42srRBrfp26"></script>

<script>
jQuery(document).ready(function(){
    jQuery("#web-subscribe-form").on("submit", function(event){
        
        var name=jQuery(this).find('input[name="name"]').val();
        var email=jQuery(this).find('input[name="email"]').val();
        var list="0UDS71SdciHqDfoq2FLX3A";
        
        var v = grecaptcha.getResponse();
        
        if(v.length == 0){
            alert("Please click \"I'm not a robot\" to continue.");
            event.preventDefault();
        }else{
            jQuery.post("https://www.codeofaninja.com/sendy/subscribe", {
                    "name" : name, 
                    "email" : email,
                    "list" : list,
                    "boolean" : "true"
                })
                .done(function(data){
                    document.location.href="https://www.codeofaninja.com/one-more-step";
                });
        }
        
    });
    
  grecaptcha.ready(function() {
    grecaptcha.execute('6Lf5ZcMZAAAAAMOPsToW_hFxzCagK42srRBrfp26', {
    	action: 'submit'
      }).then(function(token) {
        jQuery('.subscribe-form').prepend('<input type="hidden" name="token" value="'+token+'">');
    });
  });
})
</script>
</body>
</html>

<!-- Dynamic page generated in 0.224 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2022-10-02 04:21:04 -->

<!-- super cache -->